Concept,Question,Option One,Option Two,Option Three,Option Four,Correct Answer,,,,,,
getter methods,What is the purpose of a getter method in OOP?,To modify an object's attribute,To retrieve an object's attribute value,To delete an object's attribute,To create a new object,To retrieve an object's attribute value,,,,,,
setter methods,What does a setter method do in a class?,Returns the class type,Sets or updates an attribute's value,Initializes the class,Declares a static variable,Sets or updates an attribute's value,,,,,,
composition,What is composition in OOP?,A class inheriting from another class,A class containing an instance of another class,A class implementing an interface,A class with static methods,A class containing an instance of another class,,,,,,
aggregation,What distinguishes aggregation from composition?,Weaker relationship with independent lifecycles,Stronger relationship with dependent lifecycles,Involves multiple inheritance,Involves interface implementation,Weaker relationship with independent lifecycles,,,,,,
association,What is association in OOP?,A relationship between two classes,A method overriding another,An inheritance hierarchy,A static method call,A relationship between two classes,,,,,,
single responsibility principle,What does the Single Responsibility Principle state?,A class should have multiple responsibilities,A class should have only one reason to change,A class should inherit from one parent,A class should be immutable,A class should have only one reason to change,,,,,,
open closed principle,What does the Open/Closed Principle mean?,Classes should be open to modification,Classes should be open to extension but closed to modification,Classes should not use interfaces,Classes should be fully immutable,Classes should be open to extension but closed to modification,,,,,,
liskov substitution principle,What does the Liskov Substitution Principle ensure?,Subclasses can replace superclasses without breaking the program,Subclasses must override all parent methods,Subclasses cannot inherit from interfaces,Subclasses must be immutable,Subclasses can replace superclasses without breaking the program,,,,,,
interface segregation principle,What is the Interface Segregation Principle?,Clients should implement all interface methods,Clients should not be forced to depend on methods they don't use,Interfaces should be immutable,Interfaces should only have one method,Clients should not be forced to depend on methods they don't use,,,,,,
dependency inversion principle,What does the Dependency Inversion Principle state?,High-level modules should depend on low-level modules,Modules should depend on abstractions, not concretions,Classes should avoid interfaces,Dependencies should be immutable,Modules should depend on abstractions, not concretions,,,,
design patterns,What are design patterns in programming?,Reusable solutions to common problems,Random code structures,Immutable data structures,Single-use algorithms,Reusable solutions to common problems,,,,,,
factory pattern,What does the Factory Pattern do?,Creates objects without specifying the exact class,Manages database connections,Handles file I/O,Ensures thread safety,Creates objects without specifying the exact class,,,,,,
lists,What is a list in programming?,A fixed-size data structure,An ordered collection of elements,A key-value pair structure,A graph-based structure,An ordered collection of elements,,,,,,
linked lists,What is a linked list?,A collection of nodes where each node points to the next,A fixed-size array,A tree-based structure,A hash table,A collection of nodes where each node points to the next,,,,,,
singly linked list,What characterizes a singly linked list?,Each node points to the next node,Each node points to the previous node,Each node points to both next and previous,Nodes are unordered,Each node points to the next node,,,,,,
doubly linked list,What is a doubly linked list?,A list where nodes have links to both next and previous nodes,A list with only forward links,A list with no links,A circular list,A list where nodes have links to both next and previous nodes,,,,,,
circular linked list,What defines a circular linked list?,The last node points back to the first node,Nodes have no links,Each node points to two others,It is a fixed-size list,The last node points back to the first node,,,,,,
priority queues,What is a priority queue?,A queue where elements are dequeued based on priority,A queue with fixed-size elements,A stack-based structure,A sorted array,A queue where elements are dequeued based on priority,,,,,,
deques,What is a deque?,A double-ended queue allowing insertion/deletion at both ends,A single-ended queue,A fixed-size array,A tree-based structure,A double-ended queue allowing insertion/deletion at both ends,,,,,,
trees,What is a tree in data structures?,A hierarchical structure with nodes connected by edges,A linear array,A key-value pair,A flat list,A hierarchical structure with nodes connected by edges,,,,,,
binary search trees,What is a binary search tree?,A tree where left child < parent < right child,A tree with random node values,A linear list,A graph with cycles,A tree where left child < parent < right child,,,,,,
heaps,What is a heap in data structures?,A tree-based structure satisfying the heap property,A linear list,A sorted array,A graph structure,A tree-based structure satisfying the heap property,,,,,,
min heap,What is a min heap?,A heap where the parent is smaller than its children,A heap where the parent is larger,A sorted list,A random tree,A heap where the parent is smaller than its children,,,,,,
max heap,What is a max heap?,A heap where the parent is larger than its children,A heap where the parent is smaller,A linear array,A cyclic graph,A heap where the parent is larger than its children,,,,,,
directed graphs,What is a directed graph?,A graph where edges have direction,A graph with no edges,A tree structure,An undirected graph,A graph where edges have direction,,,,,,
undirected graphs,What is an undirected graph?,A graph where edges have no direction,A graph with one-way edges,A linear list,A sorted tree,A graph where edges have no direction,,,,,,
adjacency matrix,What is an adjacency matrix?,A 2D array representing graph edges,A list of nodes,A tree structure,A hash table,A 2D array representing graph edges,,,,,,
adjacency list,What is an adjacency list?,A list where each node stores its neighbors,A matrix of edges,A sorted array,A single linked list,A list where each node stores its neighbors,,,,,,
hash functions,What is the role of a hash function?,Maps data to a fixed-size value,Sorts data in ascending order,Encrypts data,Compresses files,Maps data to a fixed-size value,,,,,,
collision resolution,What is collision resolution in hash tables?,Handling cases where multiple keys map to the same index,Sorting keys alphabetically,Deleting duplicate keys,Expanding the table size,Handling cases where multiple keys map to the same index,,,,,,
tries,What is a trie in data structures?,A tree for storing strings with shared prefixes,A binary search tree,A sorted list,A hash table,A tree for storing strings with shared prefixes,,,,,,
bloom filters,What is a Bloom filter?,A probabilistic data structure for membership testing,A sorting algorithm,A tree structure,A linked list,A probabilistic data structure for membership testing,,,,,,
sorting algorithms,What do sorting algorithms do?,Arrange elements in a specific order,Search for elements,Compress data,Encrypt data,Arrange elements in a specific order,,,,,,
bubble sort,What is Bubble Sort?,A sorting algorithm that swaps adjacent elements if out of order,A quick sort variant,A tree-based sort,A hash-based sort,A sorting algorithm that swaps adjacent elements if out of order,,,,,,
selection sort,What is Selection Sort?,Selects the smallest element and places it at the start,Swaps adjacent elements,Divides and merges,Uses a pivot,Selects the smallest element and places it at the start,,,,,,
insertion sort,What is Insertion Sort?,Builds a sorted array one element at a time,Swaps adjacent elements,Uses a pivot,Divides and merges,Builds a sorted array one element at a time,,,,,,
merge sort,What is Merge Sort?,Divides the array and merges sorted halves,Swaps adjacent elements,Selects the smallest element,Uses a pivot,Divides the array and merges sorted halves,,,,,,
quick sort,What is Quick Sort?,Uses a pivot to partition and sort recursively,Swaps adjacent elements,Builds a sorted array,Uses a tree structure,Uses a pivot to partition and sort recursively,,,,,,
heap sort,What is Heap Sort?,Uses a heap to sort elements,Swaps adjacent elements,Divides and merges,Selects the smallest,Uses a heap to sort elements,,,,,,
radix sort,What is Radix Sort?,Sorts digits from least to most significant,Uses a pivot,Swaps adjacent elements,Builds a heap,Sorts digits from least to most significant,,,,,,
counting sort,What is Counting Sort?,Counts occurrences to sort integers,Uses a pivot,Divides and merges,Swaps adjacent elements,Counts occurrences to sort integers,,,,,,
searching algorithms,What do searching algorithms do?,Locate an element in a data structure,Sort elements,Compress data,Encrypt data,Locate an element in a data structure,,,,,,
linear search,What is Linear Search?,Checks each element sequentially,Uses a binary approach,Divides and merges,Builds a heap,Checks each element sequentially,,,,,,
depth first search,What is Depth-First Search?,Explores as far as possible along each branch,Checks all nodes at once,Searches level by level,Uses a pivot,Explores as far as possible along each branch,,,,,,
breadth first search,What is Breadth-First Search?,Explores all nodes at the current level first,Explores branches deeply,Uses a pivot,Sorts nodes,Breadth-First Search,,,,,,
dijkstras algorithm,What does Dijkstra's Algorithm find?,Shortest path in a weighted graph,Longest path,Minimum spanning tree,All pairs shortest paths,Shortest path in a weighted graph,,,,,,
a star algorithm,What is the A* Algorithm used for?,Finding the shortest path with heuristics,Sorting a list,Compressing data,Encrypting data,Finding the shortest path with heuristics,,,,,,
bellman ford algorithm,What does the Bellman-Ford Algorithm handle?,Shortest paths with negative weights,Minimum spanning trees,All pairs shortest paths,Sorting,Shortest paths with negative weights,,,,,,
floyd warshall algorithm,What does the Floyd-Warshall Algorithm compute?,All pairs shortest paths,Single source shortest paths,Minimum spanning tree,Depth-first traversal,All pairs shortest paths,,,,,,
kruskals algorithm,What does Kruskal's Algorithm find?,Minimum spanning tree,Shortest path,Maximum flow,Depth-first traversal,Minimum spanning tree,,,,,,
prims algorithm,What is Prim's Algorithm used for?,Finding a minimum spanning tree,Finding the shortest path,Sorting a graph,Compressing a graph,Finding a minimum spanning tree,,,,,,
dynamic programming,What is dynamic programming?,Solves problems by breaking them into overlapping subproblems,Sorts data linearly,Encrypts data,Compresses files,Solves problems by breaking them into overlapping subproblems,,,,,,
memoization,What is memoization in dynamic programming?,Caching results of expensive function calls,Sorting data,Encrypting data,Compressing files,Caching results of expensive function calls,,,,,,
knapsack problem,What does the knapsack problem optimize?,Maximizing value within a weight constraint,Sorting items,Compressing data,Encrypting data,Maximizing value within a weight constraint,,,,,,
longest common subsequence,What does the Longest Common Subsequence problem find?,Longest shared subsequence of two sequences,Shortest path,Maximum flow,Minimum spanning tree,Longest shared subsequence of two sequences,,,,,,
fibonacci sequence,What is the Fibonacci sequence?,A sequence where each number is the sum of the two preceding ones,A sorted list,A random sequence,A geometric sequence,A sequence where each number is the sum of the two preceding ones,,,,,,
greedy algorithms,What characterizes a greedy algorithm?,Makes the locally optimal choice at each step,Divides and conquers,Uses backtracking,Caches results,Makes the locally optimal choice at each step,,,,,,
divide and conquer,What is the divide and conquer strategy?,Breaks problems into smaller subproblems and combines solutions,Makes greedy choices,Uses backtracking,Caches results,Breaks problems into smaller subproblems and combines solutions,,,,,,
backtracking,What is backtracking in algorithms?,Systematically explores all possible solutions,Sorts data,Compresses data,Encrypts data,Systematically explores all possible solutions,,,,,,
recurrence relations,What is a recurrence relation?,A mathematical equation defining a sequence recursively,A sorting algorithm,A compression technique,An encryption method,A mathematical equation defining a sequence recursively,,,,,,
big o notation,What does Big O notation describe?,The upper bound of an algorithm's time complexity,The exact runtime,The memory usage,The code length,The upper bound of an algorithm's time complexity,,,,,,
relational databases,What is a relational database?,A database using tables with relationships,A key-value store,A graph database,A document store,A database using tables with relationships,,,,,,
sql,What is SQL used for?,Querying and managing relational databases,Sorting algorithms,File compression,Network encryption,Querying and managing relational databases,,,,,,
tables,What is a table in a relational database?,A collection of rows and columns storing data,A sorting algorithm,A tree structure,A hash map,A collection of rows and columns storing data,,,,,,
primary keys,What is the role of a primary key?,Uniquely identifies each row in a table,Sorts the table,Compresses data,Encrypts data,Uniquely identifies each row in a table,,,,,,
foreign keys,What does a foreign key do?,Links two tables by referencing a primary key,Sorts table data,Encrypts table data,Compresses table data,Links two tables by referencing a primary key,,,,,,
indexes,What is the purpose of an index in a database?,Speeds up query performance,Stores duplicate data,Encrypts data,Compresses data,Speeds up query performance,,,,,,
normalization,What does database normalization do?,Reduces redundancy and improves data integrity,Increases redundancy,Encrypts data,Compresses data,Reduces redundancy and improves data integrity,,,,,,
denormalization,What is denormalization in databases?,Introduces redundancy for performance,Removes all redundancy,Encrypts data,Compresses data,Introduces redundancy for performance,,,,,,
joins,What do JOIN operations do in SQL?,Combine rows from multiple tables,Sort tables,Compress tables,Encrypt tables,Combine rows from multiple tables,,,,,,
inner join,What does an INNER JOIN return?,Rows with matching values in both tables,All rows from both tables,Only unmatched rows,Rows from one table,Rows with matching values in both tables,,,,,,
left join,What does a LEFT JOIN return?,All rows from the left table and matching rows from the right,All rows from both tables,Only unmatched rows,Rows from the right table,All rows from the left table and matching rows from the right,,,,,,
right join,What does a RIGHT JOIN return?,All rows from the right table and matching rows from the left,All rows from both tables,Only unmatched rows,Rows from the left table,All rows from the right table and matching rows from the left,,,,,,
full join,What does a FULL JOIN return?,All rows from both tables with NULLs where no match exists,Only matching rows,Only unmatched rows,Rows from one table,All rows from both tables with NULLs where no match exists,,,,,,
queries,What is a database query?,A request to retrieve or manipulate data,A sorting algorithm,A compression technique,An encryption method,A request to retrieve or manipulate data,,,,,,
select statement,What does the SELECT statement do in SQL?,Retrieves data from a database,Inserts data,Updates data,Deletes data,Retrieves data from a database,,,,,,
insert statement,What does the INSERT statement do in SQL?,Adds new rows to a table,Retrieves data,Updates existing rows,Deletes rows,Adds new rows to a table,,,,,,
update statement,What does the UPDATE statement do in SQL?,Modifies existing rows in a table,Retrieves data,Inserts new rows,Deletes rows,Modifies existing rows in a table,,,,,,
delete statement,What does the DELETE statement do in SQL?,Removes rows from a table,Retrieves data,Inserts new rows,Updates rows,Removes rows from a table,,,,,,
transactions,What is a database transaction?,A sequence of operations treated as a single unit,A sorting operation,A compression technique,An encryption method,A sequence of operations treated as a single unit,,,,,,
acid properties,What do ACID properties ensure in databases?,Atomicity, Consistency, Isolation, Durability,Sorting efficiency,Compression ratio,Encryption strength,Atomicity, Consistency, Isolation, Durability
nosql databases,What is a NoSQL database?,A non-relational database with flexible schemas,A relational database,A sorted database,An encrypted database,A non-relational database with flexible schemas,,,,,,
document stores,What is a document store in NoSQL?,Stores data as JSON-like documents,Stores data as tables,Stores data as graphs,Stores data as key-value pairs,Stores data as JSON-like documents,,,,,,
key value stores,What is a key-value store in NoSQL?,Stores data as key-value pairs,Stores data as tables,Stores data as trees,Stores data as graphs,Stores data as key-value pairs,,,,,,
column family stores,What is a column-family store in NoSQL?,Stores data in column families for scalability,Stores data as documents,Stores data as graphs,Stores data as trees,Stores data in column families for scalability,,,,,,
graph databases,What is a graph database?,Stores data as nodes and edges for relationships,Stores data as tables,Stores data as documents,Stores data as key-value pairs,Stores data as nodes and edges for relationships,,,,,,
mongodb,What is MongoDB?,A document-based NoSQL database,A relational database,A graph database,A key-value store,A document-based NoSQL database,,,,,,
cassandra,What is Apache Cassandra?,A distributed column-family NoSQL database,A relational database,A document store,A graph database,A distributed column-family NoSQL database,,,,,,
redis,What is Redis?,An in-memory key-value store,A relational database,A document store,A graph database,An in-memory key-value store,,,,,,
database schema,What is a database schema?,The structure defining how data is organized,A sorting algorithm,A compression technique,An encryption method,The structure defining how data is organized,,,,,,
er diagrams,What is an ER diagram?,A visual representation of database entities and relationships,A sorting diagram,A compression diagram,An encryption diagram,A visual representation of database entities and relationships,,,,,,
html,What is HTML used for?,Structuring content on the web,Styling web pages,Managing databases,Encrypting data,Structuring content on the web,,,,,,
css,What is CSS used for?,Styling and formatting web pages,Structuring content,Managing databases,Encrypting data,Styling and formatting web pages,,,,,,
dom,What is the DOM in web development?,A programming interface for HTML documents,A database model,A sorting algorithm,An encryption method,A programming interface for HTML documents,,,,,,
ajax,What does AJAX enable in web applications?,Asynchronous data retrieval without page reloads,Page styling,Database creation,File compression,Asynchronous data retrieval without page reloads,,,,,,
json,What is JSON used for?,Exchanging data in a lightweight format,Styling web pages,Managing databases,Encrypting data,Exchanging data in a lightweight format,,,,,,
xml,What is XML used for?,Storing and transporting structured data,Styling web pages,Managing databases,Encrypting data,Storing and transporting structured data,,,,,,
apis,What is an API?,A set of rules for interacting with software components,A sorting algorithm,A compression technique,An encryption method,A set of rules for interacting with software components,,,,,,
rest,What is REST in web development?,An architectural style for designing networked applications,A database model,A sorting algorithm,An encryption method,An architectural style for designing networked applications,,,,,,
soap,What is SOAP?,A protocol for exchanging structured information,A styling language,A database model,A sorting algorithm,A protocol for exchanging structured information,,,,,,
http methods,What are HTTP methods used for?,Defining actions on web resources,Styling web pages,Managing databases,Encrypting data,Defining actions on web resources,,,,,,
status codes,What do HTTP status codes indicate?,The outcome of an HTTP request,A sorting result,A compression level,An encryption strength,The outcome of an HTTP request,,,,,,
frontend,What is the frontend in web development?,The client-side part of a web application,The server-side logic,The database layer,The network layer,The client-side part of a web application,,,,,,
backend,What is the backend in web development?,The server-side logic and data management,The client-side interface,The styling layer,The network layer,The server-side logic and data management,,,,,,
frameworks,What are programming frameworks?,Pre-built structures to streamline development,Random code snippets,Encryption tools,Compression algorithms,Pre-built structures to streamline development,,,,,,
react,What is React?,A JavaScript library for building user interfaces,A database system,A sorting algorithm,An encryption tool,A JavaScript library for building user interfaces,,,,,,
angular,What is Angular?,A framework for building client-side applications,A server-side framework,A database system,A compression tool,A framework for building client-side applications,,,,,,
vue js,What is Vue.js?,A progressive JavaScript framework for UI,A database system,A sorting algorithm,An encryption tool,A progressive JavaScript framework for UI,,,,,,
node js,What is Node.js?,A runtime for executing JavaScript server-side,A client-side framework,A database system,A compression tool,A runtime for executing JavaScript server-side,,,,,,
express js,What is Express.js?,A web framework for Node.js,A client-side library,A database system,A sorting algorithm,A web framework for Node.js,,,,,,
django,What is Django?,A Python web framework,A JavaScript library,A database system,A compression tool,A Python web framework,,,,,,
flask,What is Flask?,A lightweight Python web framework,A JavaScript library,A database system,A sorting algorithm,A lightweight Python web framework,,,,,,
cookies,What are cookies in web development?,Small data stored on the client’s browser,Server-side scripts,Database tables,Encrypted files,Small data stored on the client’s browser,,,,,,
sessions,What is a session in web development?,A server-side storage of user data during interaction,A client-side script,A database table,An encrypted file,A server-side storage of user data during interaction,,,,,,
authentication,What is authentication in web security?,Verifying a user’s identity,Styling a webpage,Managing a database,Encrypting a file,Verifying a user’s identity,,,,,,
authorization,What.Concurrent programming involves multiple tasks executing simultaneously, while parallel programming involves tasks running at the exact same time on multiple processors.,,,,,,,,,,
getter methods,What is the purpose of a getter method in OOP?,To modify an object's attribute,To retrieve an object's attribute value,To delete an object's attribute,To create a new object,To retrieve an object's attribute value,,,,,,
setter methods,What does a setter method do in a class?,Returns the class type,Sets or updates an attribute's value,Initializes the class,Declares a static variable,Sets or updates an attribute's value,,,,,,
composition,What is composition in OOP?,A class inheriting from another class,A class containing an instance of another class,A class implementing an interface,A class with static methods,A class containing an instance of another class,,,,,,
aggregation,What distinguishes aggregation from composition?,Weaker relationship with independent lifecycles,Stronger relationship with dependent lifecycles,Involves multiple inheritance,Involves interface implementation,Weaker relationship with independent lifecycles,,,,,,
association,What is association in OOP?,A relationship between two classes,A method overriding another,An inheritance hierarchy,A static method call,A relationship between two classes,,,,,,
single responsibility principle,What does the Single Responsibility Principle state?,A class should have multiple responsibilities,A class should have only one reason to change,A class should inherit from one parent,A class should be immutable,A class should have only one reason to change,,,,,,
open closed principle,What does the Open/Closed Principle mean?,Classes should be open to modification,Classes should be open to extension but closed to modification,Classes should not use interfaces,Classes should be fully immutable,Classes should be open to extension but closed to modification,,,,,,
liskov substitution principle,What does the Liskov Substitution Principle ensure?,Subclasses can replace superclasses without breaking the program,Subclasses must override all parent methods,Subclasses cannot inherit from interfaces,Subclasses must be immutable,Subclasses can replace superclasses without breaking the program,,,,,,
interface segregation principle,What is the Interface Segregation Principle?,Clients should implement all interface methods,Clients should not be forced to depend on methods they don't use,Interfaces should be immutable,Interfaces should only have one method,Clients should not be forced to depend on methods they don't use,,,,,,
dependency inversion principle,What does the Dependency Inversion Principle state?,High-level modules should depend on low-level modules,Modules should depend on abstractions, not concretions,Classes should avoid interfaces,Dependencies should be immutable,Modules should depend on abstractions, not concretions,,,,
design patterns,What are design patterns in programming?,Reusable solutions to common problems,Random code structures,Immutable data structures,Single-use algorithms,Reusable solutions to common problems,,,,,,
factory pattern,What does the Factory Pattern do?,Creates objects without specifying the exact class,Manages database connections,Handles file I/O,Ensures thread safety,Creates objects without specifying the exact class,,,,,,
lists,What is a list in programming?,A fixed-size data structure,An ordered collection of elements,A key-value pair structure,A graph-based structure,An ordered collection of elements,,,,,,
linked lists,What is a linked list?,A collection of nodes where each node points to the next,A fixed-size array,A tree-based structure,A hash table,A collection of nodes where each node points to the next,,,,,,
singly linked list,What characterizes a singly linked list?,Each node points to the next node,Each node points to the previous node,Each node points to both next and previous,Nodes are unordered,Each node points to the next node,,,,,,
doubly linked list,What is a doubly linked list?,A list where nodes have links to both next and previous nodes,A list with only forward links,A list with no links,A circular list,A list where nodes have links to both next and previous nodes,,,,,,
circular linked list,What defines a circular linked list?,The last node points back to the first node,Nodes have no links,Each node points to two others,It is a fixed-size list,The last node points back to the first node,,,,,,
priority queues,What is a priority queue?,A queue where elements are dequeued based on priority,A queue with fixed-size elements,A stack-based structure,A sorted array,A queue where elements are dequeued based on priority,,,,,,
deques,What is a deque?,A double-ended queue allowing insertion/deletion at both ends,A single-ended queue,A fixed-size array,A tree-based structure,A double-ended queue allowing insertion/deletion at both ends,,,,,,
trees,What is a tree in data structures?,A hierarchical structure with nodes connected by edges,A linear array,A key-value pair,A flat list,A hierarchical structure with nodes connected by edges,,,,,,
binary search trees,What is a binary search tree?,A tree where left child < parent < right child,A tree with random node values,A linear list,A graph with cycles,A tree where left child < parent < right child,,,,,,
heaps,What is a heap in data structures?,A tree-based structure satisfying the heap property,A linear list,A sorted array,A graph structure,A tree-based structure satisfying the heap property,,,,,,
min heap,What is a min heap?,A heap where the parent is smaller than its children,A heap where the parent is larger,A sorted list,A random tree,A heap where the parent is smaller than its children,,,,,,
max heap,What is a max heap?,A heap where the parent is larger than its children,A heap where the parent is smaller,A linear array,A cyclic graph,A heap where the parent is larger than its children,,,,,,
directed graphs,What is a directed graph?,A graph where edges have direction,A graph with no edges,A tree structure,An undirected graph,A graph where edges have direction,,,,,,
undirected graphs,What is an undirected graph?,A graph where edges have no direction,A graph with one-way edges,A linear list,A sorted tree,A graph where edges have no direction,,,,,,
adjacency matrix,What is an adjacency matrix?,A 2D array representing graph edges,A list of nodes,A tree structure,A hash table,A 2D array representing graph edges,,,,,,
adjacency list,What is an adjacency list?,A list where each node stores its neighbors,A matrix of edges,A sorted array,A single linked list,A list where each node stores its neighbors,,,,,,
hash functions,What is the role of a hash function?,Maps data to a fixed-size value,Sorts data in ascending order,Encrypts data,Compresses files,Maps data to a fixed-size value,,,,,,
collision resolution,What is collision resolution in hash tables?,Handling cases where multiple keys map to the same index,Sorting keys alphabetically,Deleting duplicate keys,Expanding the table size,Handling cases where multiple keys map to the same index,,,,,,
tries,What is a trie in data structures?,A tree for storing strings with shared prefixes,A binary search tree,A sorted list,A hash table,A tree for storing strings with shared prefixes,,,,,,
bloom filters,What is a Bloom filter?,A probabilistic data structure for membership testing,A sorting algorithm,A tree structure,A linked list,A probabilistic data structure for membership testing,,,,,,
sorting algorithms,What do sorting algorithms do?,Arrange elements in a specific order,Search for elements,Compress data,Encrypt data,Arrange elements in a specific order,,,,,,
bubble sort,What is Bubble Sort?,A sorting algorithm that swaps adjacent elements if out of order,A quick sort variant,A tree-based sort,A hash-based sort,A sorting algorithm that swaps adjacent elements if out of order,,,,,,
selection sort,What is Selection Sort?,Selects the smallest element and places it at the start,Swaps adjacent elements,Divides and merges,Uses a pivot,Selects the smallest element and places it at the start,,,,,,
insertion sort,What is Insertion Sort?,Builds a sorted array one element at a time,Swaps adjacent elements,Uses a pivot,Divides and merges,Builds a sorted array one element at a time,,,,,,
merge sort,What is Merge Sort?,Divides the array and merges sorted halves,Swaps adjacent elements,Selects the smallest element,Uses a pivot,Divides the array and merges sorted halves,,,,,,
quick sort,What is Quick Sort?,Uses a pivot to partition and sort recursively,Swaps adjacent elements,Builds a sorted array,Uses a tree structure,Uses a pivot to partition and sort recursively,,,,,,
heap sort,What is Heap Sort?,Uses a heap to sort elements,Swaps adjacent elements,Divides and merges,Selects the smallest,Uses a heap to sort elements,,,,,,
radix sort,What is Radix Sort?,Sorts digits from least to most significant,Uses a pivot,Swaps adjacent elements,Builds a heap,Sorts digits from least to most significant,,,,,,
counting sort,What is Counting Sort?,Counts occurrences to sort integers,Uses a pivot,Divides and merges,Swaps adjacent elements,Counts occurrences to sort integers,,,,,,
searching algorithms,What do searching algorithms do?,Locate an element in a data structure,Sort elements,Compress data,Encrypt data,Locate an element in a data structure,,,,,,
linear search,What is Linear Search?,Checks each element sequentially,Uses a binary approach,Divides and merges,Builds a heap,Checks each element sequentially,,,,,,
depth first search,What is Depth-First Search?,Explores as far as possible along each branch,Checks all nodes at once,Searches level by level,Uses a pivot,Explores as far as possible along each branch,,,,,,
breadth first search,What is Breadth-First Search?,Explores all nodes at the current level first,Explores branches deeply,Uses a pivot,Sorts nodes,Explores all nodes at the current level first,,,,,,
dijkstras algorithm,What does Dijkstra's Algorithm find?,Shortest path in a weighted graph,Longest path,Minimum spanning tree,All pairs shortest paths,Shortest path in a weighted graph,,,,,,
a star algorithm,What is the A* Algorithm used for?,Finding the shortest path with heuristics,Sorting a list,Compressing data,Encrypting data,Finding the shortest path with heuristics,,,,,,
bellman ford algorithm,What does the Bellman-Ford Algorithm handle?,Shortest paths with negative weights,Minimum spanning trees,All pairs shortest paths,Sorting,Shortest paths with negative weights,,,,,,
floyd warshall algorithm,What does the Floyd-Warshall Algorithm compute?,All pairs shortest paths,Single source shortest paths,Minimum spanning tree,Depth-first traversal,All pairs shortest paths,,,,,,
kruskals algorithm,What does Kruskal's Algorithm find?,Minimum spanning tree,Shortest path,Maximum flow,Depth-first traversal,Minimum spanning tree,,,,,,
prims algorithm,What is Prim's Algorithm used for?,Finding a minimum spanning tree,Finding the shortest path,Sorting a graph,Compressing a graph,Finding a minimum spanning tree,,,,,,
dynamic programming,What is dynamic programming?,Solves problems by breaking them into overlapping subproblems,Sorts data linearly,Encrypts data,Compresses files,Solves problems by breaking them into overlapping subproblems,,,,,,
memoization,What is memoization in dynamic programming?,Caching results of expensive function calls,Sorting data,Encrypting data,Compressing files,Caching results of expensive function calls,,,,,,
knapsack problem,What does the knapsack problem optimize?,Maximizing value within a weight constraint,Sorting items,Compressing data,Encrypting data,Maximizing value within a weight constraint,,,,,,
longest common subsequence,What does the Longest Common Subsequence problem find?,Longest shared subsequence of two sequences,Shortest path,Maximum flow,Minimum spanning tree,Longest shared subsequence of two sequences,,,,,,
fibonacci sequence,What is the Fibonacci sequence?,A sequence where each number is the sum of the two preceding ones,A sorted list,A random sequence,A geometric sequence,A sequence where each number is the sum of the two preceding ones,,,,,,
greedy algorithms,What characterizes a greedy algorithm?,Makes the locally optimal choice at each step,Divides and conquers,Uses backtracking,Caches results,Makes the locally optimal choice at each step,,,,,,
divide and conquer,What is the divide and conquer strategy?,Breaks problems into smaller subproblems and combines solutions,Makes greedy choices,Uses backtracking,Caches results,Breaks problems into smaller subproblems and combines solutions,,,,,,
backtracking,What is backtracking in algorithms?,Systematically explores all possible solutions,Sorts data,Compresses data,Encrypts data,Systematically explores all possible solutions,,,,,,
recurrence relations,What is a recurrence relation?,A mathematical equation defining a sequence recursively,A sorting algorithm,A compression technique,An encryption method,A mathematical equation defining a sequence recursively,,,,,,
big o notation,What does Big O notation describe?,The upper bound of an algorithm's time complexity,The exact runtime,The memory usage,The code length,The upper bound of an algorithm's time complexity,,,,,,
relational databases,What is a relational database?,A database using tables with relationships,A key-value store,A graph database,A document store,A database using tables with relationships,,,,,,
sql,What is SQL used for?,Querying and managing relational databases,Sorting algorithms,File compression,Network encryption,Querying and managing relational databases,,,,,,
tables,What is a table in a relational database?,A collection of rows and columns storing data,A sorting algorithm,A tree structure,A hash map,A collection of rows and columns storing data,,,,,,
primary keys,What is the role of a primary key?,Uniquely identifies each row in a table,Sorts the table,Compresses data,Encrypts data,Uniquely identifies each row in a table,,,,,,
foreign keys,What does a foreign key do?,Links two tables by referencing a primary key,Sorts table data,Encrypts table data,Compresses table data,Links two tables by referencing a primary key,,,,,,
indexes,What is the purpose of an index in a database?,Speeds up query performance,Stores duplicate data,Encrypts data,Compresses data,Speeds up query performance,,,,,,
normalization,What does database normalization do?,Reduces redundancy and improves data integrity,Increases redundancy,Encrypts data,Compresses data,Reduces redundancy and improves data integrity,,,,,,
denormalization,What is denormalization in databases?,Introduces redundancy for performance,Removes all redundancy,Encrypts data,Compresses data,Introduces redundancy for performance,,,,,,
joins,What do JOIN operations do in SQL?,Combine rows from multiple tables,Sort tables,Compress tables,Encrypt tables,Combine rows from multiple tables,,,,,,
inner join,What does an INNER JOIN return?,Rows with matching values in both tables,All rows from both tables,Only unmatched rows,Rows from one table,Rows with matching values in both tables,,,,,,
left join,What does a LEFT JOIN return?,All rows from the left table and matching rows from the right,All rows from both tables,Only unmatched rows,Rows from the right table,All rows from the left table and matching rows from the right,,,,,,
right join,What does a RIGHT JOIN return?,All rows from the right table and matching rows from the left,All rows from both tables,Only unmatched rows,Rows from the left table,All rows from the right table and matching rows from the left,,,,,,
full join,What does a FULL JOIN return?,All rows from both tables with NULLs where no match exists,Only matching rows,Only unmatched rows,Rows from one table,All rows from both tables with NULLs where no match exists,,,,,,
queries,What is a database query?,A request to retrieve or manipulate data,A sorting algorithm,A compression technique,An encryption method,A request to retrieve or manipulate data,,,,,,
select statement,What does the SELECT statement do in SQL?,Retrieves data from a database,Inserts data,Updates data,Deletes data,Retrieves data from a database,,,,,,
insert statement,What does the INSERT statement do in SQL?,Adds new rows to a table,Retrieves data,Updates existing rows,Deletes rows,Adds new rows to a table,,,,,,
update statement,What does the UPDATE statement do in SQL?,Modifies existing rows in a table,Retrieves data,Inserts new rows,Deletes rows,Modifies existing rows in a table,,,,,,
delete statement,What does the DELETE statement do in SQL?,Removes rows from a table,Retrieves data,Inserts new rows,Updates rows,Removes rows from a table,,,,,,
transactions,What is a database transaction?,A sequence of operations treated as a single unit,A sorting operation,A compression technique,An encryption method,A sequence of operations treated as a single unit,,,,,,
acid properties,What do ACID properties ensure in databases?,Atomicity, Consistency, Isolation, Durability,Sorting efficiency,Compression ratio,Encryption strength,Atomicity, Consistency, Isolation, Durability
nosql databases,What is a NoSQL database?,A non-relational database with flexible schemas,A relational database,A sorted database,An encrypted database,A non-relational database with flexible schemas,,,,,,
document stores,What is a document store in NoSQL?,Stores data as JSON-like documents,Stores data as tables,Stores data as graphs,Stores data as key-value pairs,Stores data as JSON-like documents,,,,,,
key value stores,What is a key-value store in NoSQL?,Stores data as key-value pairs,Stores data as tables,Stores data as trees,Stores data as graphs,Stores data as key-value pairs,,,,,,
column family stores,What is a column-family store in NoSQL?,Stores data in column families for scalability,Stores data as documents,Stores data as graphs,Stores data as trees,Stores data in column families for scalability,,,,,,
graph databases,What is a graph database?,Stores data as nodes and edges for relationships,Stores data as tables,Stores data as documents,Stores data as key-value pairs,Stores data as nodes and edges for relationships,,,,,,
mongodb,What is MongoDB?,A document-based NoSQL database,A relational database,A graph database,A key-value store,A document-based NoSQL database,,,,,,
cassandra,What is Apache Cassandra?,A distributed column-family NoSQL database,A relational database,A document store,A graph database,A distributed column-family NoSQL database,,,,,,
redis,What is Redis?,An in-memory key-value store,A relational database,A document store,A graph database,An in-memory key-value store,,,,,,
database schema,What is a database schema?,The structure defining how data is organized,A sorting algorithm,A compression technique,An encryption method,The structure defining how data is organized,,,,,,
er diagrams,What is an ER diagram?,A visual representation of database entities and relationships,A sorting diagram,A compression diagram,An encryption diagram,A visual representation of database entities and relationships,,,,,,
html,What is HTML used for?,Structuring content on the web,Styling web pages,Managing databases,Encrypting data,Structuring content on the web,,,,,,
css,What is CSS used for?,Styling and formatting web pages,Structuring content,Managing databases,Encrypting data,Styling and formatting web pages,,,,,,
dom,What is the DOM in web development?,A programming interface for HTML documents,A database model,A sorting algorithm,An encryption method,A programming interface for HTML documents,,,,,,
ajax,What does AJAX enable in web applications?,Asynchronous data retrieval without page reloads,Page styling,Database creation,File compression,Asynchronous data retrieval without page reloads,,,,,,
json,What is JSON used for?,Exchanging data in a lightweight format,Styling web pages,Managing databases,Encrypting data,Exchanging data in a lightweight format,,,,,,
xml,What is XML used for?,Storing and transporting structured data,Styling web pages,Managing databases,Encrypting data,Storing and transporting structured data,,,,,,
apis,What is an API?,A set of rules for interacting with software components,A sorting algorithm,A compression technique,An encryption method,A set of rules for interacting with software components,,,,,,
rest,What is REST in web development?,An architectural style for designing networked applications,A database model,A sorting algorithm,An encryption method,An architectural style for designing networked applications,,,,,,
soap,What is SOAP?,A protocol for exchanging structured information,A styling language,A database model,A sorting algorithm,A protocol for exchanging structured information,,,,,,
http methods,What are HTTP methods used for?,Defining actions on web resources,Styling web pages,Managing databases,Encrypting data,Defining actions on web resources,,,,,,
status codes,What do HTTP status codes indicate?,The outcome of an HTTP request,A sorting result,A compression level,An encryption strength,The outcome of an HTTP request,,,,,,
frontend,What is the frontend in web development?,The client-side part of a web application,The server-side logic,The database layer,The network layer,The client-side part of a web application,,,,,,
backend,What is the backend in web development?,The server-side logic and data management,The client-side interface,The styling layer,The network layer,The server-side logic and data management,,,,,,
frameworks,What are programming frameworks?,Pre-built structures to streamline development,Random code snippets,Encryption tools,Compression algorithms,Pre-built structures to streamline development,,,,,,
react,What is React?,A JavaScript library for building user interfaces,A database system,A sorting algorithm,An encryption tool,A JavaScript library for building user interfaces,,,,,,
angular,What is Angular?,A framework for building client-side applications,A server-side framework,A database system,A compression tool,A framework for building client-side applications,,,,,,
vue js,What is Vue.js?,A progressive JavaScript framework for UI,A database system,A sorting algorithm,An encryption tool,A progressive JavaScript framework for UI,,,,,,
node js,What is Node.js?,A runtime for executing JavaScript server-side,A client-side framework,A database system,A compression tool,A runtime for executing JavaScript server-side,,,,,,
express js,What is Express.js?,A web framework for Node.js,A client-side library,A database system,A sorting algorithm,A web framework for Node.js,,,,,,
django,What is Django?,A Python web framework,A JavaScript library,A database system,A compression tool,A Python web framework,,,,,,
flask,What is Flask?,A lightweight Python web framework,A JavaScript library,A database system,A sorting algorithm,A lightweight Python web framework,,,,,,
cookies,What are cookies in web development?,Small data stored on the client’s browser,Server-side scripts,Database tables,Encrypted files,Small data stored on the client’s browser,,,,,,
sessions,What is a session in web development?,A server-side storage of user data during interaction,A client-side script,A database table,An encrypted file,A server-side storage of user data during interaction,,,,,,
authentication,What is authentication in web security?,Verifying a user’s identity,Styling a webpage,Managing a database,Encrypting a file,Verifying a user’s identity,,,,,,
authorization,What is authorization in web security?,Granting access to resources,Verifying user identity,Styling a webpage,Managing a database,Granting access to resources,,,,,,
oauth,What is OAuth?,A protocol for secure authorization,A styling framework,A database system,A sorting algorithm,A protocol for secure authorization,,,,,,
jwt,What is a JWT?,A JSON-based token for secure data exchange,A styling token,A database query,A compression method,A JSON-based token for secure data exchange,,,,,,
cors,What does CORS stand for in web development?,Cross-Origin Resource Sharing,Cross-Origin Request Sorting,Client-Origin Resource Security,Cross-Origin Response Sharing,Cross-Origin Resource Sharing,,,,,,
websockets,What are WebSockets used for?,Real-time bidirectional communication,Styling web pages,Managing databases,Encrypting data,Real-time bidirectional communication,,,,,,
sdlc,What does SDLC stand for?,Software Development Life Cycle,System Design Language Cycle,Software Deployment Life Cycle,System Development Learning Cycle,Software Development Life Cycle,,,,,,
agile methodology,What is the Agile methodology?,An iterative approach to software development,A linear development model,A database management system,A compression technique,An iterative approach to software development,,,,,,
scrum,What is Scrum?,An Agile framework for team collaboration,A styling framework,A database system,A sorting algorithm,An Agile framework for team collaboration,,,,,,
kanban,What is Kanban?,A method for visualizing and managing workflow,A database model,A compression technique,An encryption method,A method for visualizing and managing workflow,,,,,,
waterfall model,What is the Waterfall model?,A sequential software development process,An iterative process,A database system,A styling framework,A sequential software development process,,,,,,
version control,What is version control?,Tracking and managing code changes,Styling code,Managing databases,Encrypting code,Tracking and managing code changes,,,,,,
git,What is Git?,A distributed version control system,A styling tool,A database system,A compression algorithm,A distributed version control system,,,,,,
github,What is GitHub?,A platform for hosting Git repositories,A local version control tool,A database system,A styling framework,A platform for hosting Git repositories,,,,,,
commits,What is a commit in Git?,A snapshot of changes to a repository,A styling change,A database query,A compression method,A snapshot of changes to a repository,,,,,,
branches,What are branches in Git?,Isolated lines of development,Styling lines,Database tables,Encrypted files,Isolated lines of development,,,,,,
merging,What does merging do in Git?,Combines changes from different branches,Sorts code,Compresses code,Encrypts code,Combines changes from different branches,,,,,,
pull requests,What is a pull request in Git?,A request to merge changes into a branch,A styling request,A database query,A compression request,A request to merge changes into a branch,,,,,,
continuous integration,What is continuous integration?,Automating code integration and testing,Manually testing code,Styling code,Encrypting code,Automating code integration and testing,,,,,,
continuous deployment,What is continuous deployment?,Automatically deploying code changes to production,Manually deploying code,Styling code,Compressing code,Automatically deploying code changes to production,,,,,,
unit testing,What is unit testing?,Testing individual components of code,Testing the entire application,Styling code,Encrypting code,Testing individual components of code,,,,,,
integration testing,What is integration testing?,Testing interactions between components,Testing single units,Styling components,Compressing components,Testing interactions between components,,,,,,
regression testing,What is regression testing?,Ensuring new changes don’t break existing functionality,Testing new features,Styling code,Encrypting code,Ensuring new changes don’t break existing functionality,,,,,,
test driven development,What is Test-Driven Development?,Writing tests before code,Writing code before tests,Styling code,Compressing code,Writing tests before code,,,,,,
behavior driven development,What is Behavior-Driven Development?,Focusing on user behavior in testing,Testing code performance,Styling code,Encrypting code,Focusing on user behavior in testing,,,,,,
procedural programming,What is procedural programming?,Programming with procedures and functions,Object-oriented programming,Functional programming,Event-driven programming,Programming with procedures and functions,,,,,,
functional programming,What is functional programming?,Programming with pure functions and immutability,Procedural programming,Object-oriented programming,Event-driven programming,Programming with pure functions and immutability,,,,,,
declarative programming,What is declarative programming?,Specifying what to do without how,Specifying how to do it,Styling code,Encrypting code,Specifying what to do without how,,,,,,
imperative programming,What is imperative programming?,Specifying how to achieve a result,Specifying what to achieve,Styling code,Encrypting code,Specifying how to achieve a result,,,,,,
concurrent programming,What is concurrent programming?,Managing multiple tasks executing simultaneously,Running tasks sequentially,Styling tasks,Compressing tasks,Managing multiple tasks executing simultaneously,,,,,,
parallel programming,What is parallel programming?,Running tasks simultaneously on multiple processors,Running tasks sequentially,Styling tasks,Compressing tasks,Running tasks simultaneously on multiple processors,,,,,,
asynchronous programming,What is asynchronous programming?,Executing tasks without blocking the main thread,Blocking the main thread,Styling tasks,Compressing tasks,Executing tasks without blocking the main thread,,,,,,
processes,What is a process in computing?,An instance of a running program,A thread within a program,A styling rule,A compression unit,An instance of a running program,,,,,,
threads,What is a thread in computing?,A lightweight unit of execution within a process,A separate program,A styling rule,A compression unit,A lightweight unit of execution within a process,,,,,,
multithreading,What is multithreading?,Running multiple threads in a single process,Running multiple processes,Styling threads,Compressing threads,Running multiple threads in a single process,,,,,,
scheduling,What is scheduling in operating systems?,Assigning CPU time to processes or threads,Styling processes,Compressing processes,Encrypting processes,Assigning CPU time to processes or threads,,,,,,
deadlocks,What is a deadlock?,A situation where processes block each other indefinitely,A successful process execution,A styling issue,A compression error,A situation where processes block each other indefinitely,,,,,,
semaphores,What is a semaphore in concurrent programming?,A synchronization tool for controlling access,A styling tool,A compression tool,An encryption tool,A synchronization tool for controlling access,,,,,,
mutex,What is a mutex?,A lock for ensuring mutual exclusion in concurrency,A styling lock,A compression lock,An encryption lock,A lock for ensuring mutual exclusion in concurrency,,,,,,
memory management,What is memory management in operating systems?,Allocating and deallocating memory for processes,Styling memory,Compressing memory,Encrypting memory,Allocating and deallocating memory for processes,,,,,,
virtual memory,What is virtual memory?,A technique to simulate more memory than physically available,Physical memory,Styled memory,Compressed memory,A technique to simulate more memory than physically available,,,,,,
paging,What is paging in memory management?,Dividing memory into fixed-size pages,Dividing memory into variable sizes,Styling memory,Encrypting memory,Dividing memory into fixed-size pages,,,,,,
osi model,What is the OSI model?,A framework for network communication layers,A styling framework,A database model,A compression model,A framework for network communication layers,,,,,,
tcp ip,What is TCP/IP?,A protocol suite for internet communication,A styling protocol,A database protocol,A compression protocol,A protocol suite for internet communication,,,,,,
http,What is HTTP?,A protocol for web data transfer,A styling protocol,A database protocol,A compression protocol,A protocol for web data transfer,,,,,,
https,What is HTTPS?,HTTP with secure encryption,A styling protocol,A database protocol,A compression protocol,HTTP with secure encryption,,,,,,
dns,What does DNS do?,Translates domain names to IP addresses,Styles web pages,Manages databases,Compresses data,Translates domain names to IP addresses,,,,,,
ip address,What is an IP address?,A unique identifier for a device on a network,A styling rule,A database key,A compression code,A unique identifier for a device on a network,,,,,,
ports,What is a port in networking?,A communication endpoint for network services,A styling endpoint,A database endpoint,A compression endpoint,A communication endpoint for network services,,,,,,
sockets,What is a socket in networking?,An endpoint for sending/receiving data,A styling tool,A database tool,A compression tool,An endpoint for sending/receiving data,,,,,,
firewalls,What is a firewall?,A security system to control network traffic,A styling system,A database system,A compression system,A security system to control network traffic,,,,,,
load balancers,What does a load balancer do?,Distributes network traffic across servers,Styles network traffic,Compresses network traffic,Encrypts network traffic,Distributes network traffic across servers,,,,,,
encryption,What is encryption?,Converting data into a secure format,Sorting data,Compressing data,Styling data,Converting data into a secure format,,,,,,
symmetric encryption,What is symmetric encryption?,Using the same key for encryption and decryption,Using different keys,Sorting data,Compressing data,Using the same key for encryption and decryption,,,,,,
asymmetric encryption,What is asymmetric encryption?,Using a public-private key pair,Using a single key,Sorting data,Compressing data,Using a public-private key pair,,,,,,
hashing,What is hashing?,Generating a fixed-size value from data,Sorting data,Compressing data,Styling data,Generating a fixed-size value from data,,,,,,
digital signatures,What are digital signatures used for?,Verifying data authenticity and integrity,Styling data,Compressing data,Sorting data,Verifying data authenticity and integrity,,,,,,
ssl tls,What do SSL/TLS protocols provide?,Secure communication over a network,Styled communication,Compressed communication,Sorted communication,Secure communication over a network,,,,,,
sql injection,What is SQL injection?,Injecting malicious SQL code into queries,Styling SQL queries,Compressing SQL queries,Sorting SQL queries,Injecting malicious SQL code into queries,,,,,,
cross site scripting,What is Cross-Site Scripting (XSS)?,Injecting malicious scripts into web pages,Styling web pages,Compressing web pages,Sorting web pages,Injecting malicious scripts into web pages,,,,,,
cross site request forgery,What is Cross-Site Request Forgery (CSRF)?,Tricking users into executing unwanted actions,Styling user actions,Compressing user actions,Sorting user actions,Tricking users into executing unwanted actions,,,,,,
authentication vs authorization,What is the difference between authentication and authorization?,Authentication verifies identity; authorization grants access,Authentication grants access; authorization verifies identity,Both are the same,Neither involves security,Authentication verifies identity; authorization grants access,,,,,,
machine learning,What is machine learning?,Algorithms learning from data to make predictions,Sorting data,Compressing data,Styling data,Algorithms learning from data to make predictions,,,,,,
supervised learning,What is supervised learning?,Learning from labeled data,Learning from unlabeled data,Sorting data,Compressing data,Learning from labeled data,,,,,,
unsupervised learning,What is unsupervised learning?,Learning from unlabeled data,Learning from labeled data,Sorting data,Compressing data,Learning from unlabeled data,,,,,,
classification,What is classification in machine learning?,Predicting discrete labels,Predicting continuous values,Sorting data,Compressing data,Predicting discrete labels,,,,,,
regression,What is regression in machine learning?,Predicting continuous values,Predicting discrete labels,Sorting data,Compressing data,Predicting continuous values,,,,,,
clustering,What is clustering in machine learning?,Grouping similar data points,Classifying data,Sorting data,Compressing data,Grouping similar data points,,,,,,
neural networks,What are neural networks?,Models inspired by the human brain,Sorting algorithms,Compression algorithms,Styling algorithms,Models inspired by the human brain,,,,,,
deep learning,What is deep learning?,Using neural networks with many layers,Using shallow networks,Sorting data,Compressing data,Using neural networks with many layers,,,,,,
natural language processing,What is natural language processing?,Processing and analyzing human language,Sorting text,Compressing text,Styling text,Processing and analyzing human language,,,,,,
computer vision,What is computer vision?,Enabling machines to interpret visual data,Sorting images,Compressing images,Styling images,Enabling machines to interpret visual data,,,,,,
try catch blocks,What do try-catch blocks do?,Handle exceptions in code,Style code,Compress code,Sort code,Handle exceptions in code,,,,,,
garbage collection,What is garbage collection?,Automatic memory deallocation,Manual memory allocation,Code styling,Code compression,Automatic memory deallocation,,,,,,
memory leaks,What is a memory leak?,Memory not released after use,Memory released too early,Styled memory,Compressed memory,Memory not released after use,,,,,,
references,What is a reference in programming?,A pointer to a memory location,A fixed value,A styled variable,A compressed variable,A pointer to a memory location,,,,,,
python list comprehensions,What is a Python list comprehension?,A concise way to create lists,A sorting method,A compression method,A styling method,A concise way to create lists,,,,,,
java interfaces,What is a Java interface?,A contract for classes to implement,A class with fields,A styling rule,A compression rule,A contract for classes to implement,,,,,,
c plus plus templates,What are C++ templates?,Generic programming constructs,Styling constructs,Compression constructs,Sorting constructs,Generic programming constructs,,,,,,
javascript prototypes,What are JavaScript prototypes?,Objects for inheritance,Styling objects,Compression objects,Sorting objects,Objects for inheritance,,,,,,
ruby blocks,What are Ruby blocks?,Anonymous functions passed to methods,Styling functions,Compression functions,Sorting functions,Anonymous functions passed to methods,,,,,,
php sessions,What are PHP sessions?,Server-side storage for user data,Client-side storage,Styling data,Compressing data,Server-side storage for user data,,,,,,
go routines,What are Go routines?,Lightweight threads in Go,Styling threads,Compression threads,Sorting threads,Lightweight threads in Go,,,,,,
rust ownership,What is Rust ownership?,A system for managing memory safety,Styling memory,Compressing memory,Sorting memory,A system for managing memory safety,,,,,,
swift optionals,What are Swift optionals?,Variables that may be nil,Fixed variables,Styled variables,Compressed variables,Variables that may be nil,,,,,,
kotlin coroutines,What are Kotlin coroutines?,Asynchronous programming constructs,Styling constructs,Compression constructs,Sorting constructs,Asynchronous programming constructs,,,,,,
ides,What is an IDE?,An integrated development environment,Styling software,Compression software,Sorting software,An integrated development environment,,,,,,
text editors,What is a text editor?,Software for editing plain text,Database software,Styling software,Compression software,Software for editing plain text,,,,,,
virtual machines,What is a virtual machine?,Emulated computer system,Physical computer,Styled computer,Compressed computer,Emulated computer system,,,,,,
containers,What are containers?,Lightweight, isolated environments,Physical servers,Styled environments,Compressed environments,Lightweight, isolated environments,,,,
docker,What is Docker?,A platform for containerization,Styling platform,Compression platform,Sorting platform,A platform for containerization,,,,,,
kubernetes,What is Kubernetes?,Orchestrates containerized applications,Styles containers,Compresses containers,Sorts containers,Orchestrates containerized applications,,,,,,
cloud computing,What is cloud computing?,Delivering computing services over the internet,Local computing,Styled computing,Compressed computing,Delivering computing services over the internet,,,,,,
aws,What is AWS?,Amazon’s cloud computing platform,Styling platform,Compression platform,Sorting platform,Amazon’s cloud computing platform,,,,,,
azure,What is Azure?,Microsoft’s cloud computing platform,Styling platform,Compression platform,Sorting platform,Microsoft’s cloud computing platform,,,,,,
gcp,What is GCP?,Google’s cloud computing platform,Styling platform,Compression platform,Sorting platform,Google’s cloud computing platform,,,,,,
microservices,What are microservices?,Small, independent services,Monolithic services,Styled services,Compressed services,Small, independent services,,,,
serverless architecture,What is serverless architecture?,Running code without managing servers,Managing physical servers,Styling servers,Compressing servers,Running code without managing servers,,,,,,
graphql,What is GraphQL?,A query language for APIs,Styling language,Compression language,Sorting language,A query language for APIs,,,,,,
mvc pattern,What is the MVC pattern?,Separates Model, View, Controller,Styles code,Compresses code,Sorts code,Separates Model, View, Controller,,
mvvm pattern,What is the MVVM pattern?,Separates Model, View, ViewModel,Styles code,Compresses code,Sorts code,Separates Model, View, ViewModel,,
observer pattern,What is the Observer pattern?,Notifies objects of state changes,Creates objects,Styles objects,Compresses objects,Notifies objects of state changes,,,,,,
decorator pattern,What is the Decorator pattern?,Dynamically adds responsibilities to objects,Creates objects,Styles objects,Sorts objects,Dynamically adds responsibilities to objects,,,,,,
command pattern,What is the Command pattern?,Encapsulates requests as objects,Styles requests,Compresses requests,Sorts requests,Encapsulates requests as objects,,,,,,
strategy pattern,What is the Strategy pattern?,Defines interchangeable algorithms,Styles algorithms,Compresses algorithms,Sorts algorithms,Defines interchangeable algorithms,,,,,,
state pattern,What is the State pattern?,Allows an object to alter its behavior,Styles objects,Compresses objects,Sorts objects,Allows an object to alter its behavior,,,,,,
adapter pattern,What is the Adapter pattern?,Converts one interface to another,Styles interfaces,Compresses interfaces,Sorts interfaces,Converts one interface to another,,,,,,
facade pattern,What is the Facade pattern?,Simplifies complex subsystems,Complicates systems,Styles systems,Sorts systems,Simplifies complex subsystems,,,,,,
proxy pattern,What is the Proxy pattern?,Controls access to an object,Styles objects,Compresses objects,Sorts objects,Controls access to an object,,,,,,
iterator pattern,What is the Iterator pattern?,Provides sequential access to elements,Styles elements,Compresses elements,Sorts elements,Provides sequential access to elements,,,,,,
visitor pattern,What is the Visitor pattern?,Separates operations from object structures,Styles objects,Compresses objects,Sorts objects,Separates operations from object structures,,,,,,
template method pattern,What is the Template Method pattern?,Defines algorithm skeleton with customizable steps,Styles algorithms,Compresses algorithms,Sorts algorithms,Defines algorithm skeleton with customizable steps,,,,,,
chain of responsibility pattern,What is the Chain of Responsibility pattern?,Passes requests along a chain,Styles requests,Compresses requests,Sorts requests,Passes requests along a chain,,,,,,
mediator pattern,What is the Mediator pattern?,Centralizes communication between objects,Styles objects,Compresses objects,Sorts objects,Centralizes communication between objects,,,,,,
pure functions,What is a pure function?,A function with no side effects,Function with side effects,Styled function,Compressed function,A function with no side effects,,,,,,
immutability,What is immutability?,Data that cannot be changed,Data that must change,Styled data,Compressed data,Data that cannot be changed,,,,,,
function composition,What is function composition?,Combining functions to produce a new function,Styling functions,Compressing functions,Sorting functions,Combining functions to produce a new function,,,,,,
partial application,What is partial application?,Fixing some arguments of a function,Styling arguments,Compressing arguments,Sorting arguments,Fixing some arguments of a function,,,,,,
tail recursion,What is tail recursion?,Recursion where the recursive call is the last operation,Recursion at the start,Styled recursion,Compressed recursion,Recursion where the recursive call is the last operation,,,,,,
foldables,What are foldables in functional programming?,Data structures that can be folded,Styled structures,Compressed structures,Sorted structures,Data structures that can be folded,,,,,,
traversables,What are traversables in functional programming?,Data structures that can be traversed with effects,Styled structures,Compressed structures,Sorted structures,Data structures that can be traversed with effects,,,,,,
lenses,What are lenses in functional programming?,Tools for accessing and updating data immutably,Styling tools,Compression tools,Sorting tools,Tools for accessing and updating data immutably,,,,,,
effect systems,What are effect systems in functional programming?,Managing side effects in a controlled way,Styling effects,Compressing effects,Sorting effects,Managing side effects in a controlled way,,,,,,
referential transparency,What is referential transparency?,Expressions that can be replaced with their values,Styled expressions,Compressed expressions,Sorted expressions,Expressions that can be replaced with their values,,,,,,
type inference,What is type inference?,Automatically determining variable types,Manually setting types,Styling types,Compressing types,Automatically determining variable types,,,,,,
polymorphic method,What is a polymorphic method?,A method that works with different types,Styled method,Compressed method,Sorted method,A method that works with different types,,,,,,
event bubbling,What is event bubbling in JavaScript?,Events propagating up the DOM,Events staying local,Styled events,Compressed events,Events propagating up the DOM,,,,,,
friend function,What is a friend function in C++?,A function with access to private class members,Styled function,Compressed function,Sorted function,A function with access to private class members,,,,,,
overloaded constructor,What is an overloaded constructor?,Multiple constructors with different parameters,Single constructor,Styled constructor,Compressed constructor,Multiple constructors with different parameters,,,,,,
queue (collections.deque),What is collections.deque in Python?,A double-ended queue,Single-ended queue,Styled queue,Compressed queue,A double-ended queue,,,,,,
thunk,What is a thunk in programming?,A delayed computation,Immediate computation,Styled computation,Compressed computation,A delayed computation,,,,,,
dataframe (pandas),What is a DataFrame in pandas?,A tabular data structure,Styled table,Compressed table,Sorted table,A tabular data structure,,,,,,
service worker,What is a service worker?,A script for offline web capabilities,Styled script,Compressed script,Sorted script,A script for offline web capabilities,,,,,,
web worker,What is a web worker?,A script running in the background,Styled script,Compressed script,Sorted script,A script running in the background,,,,,,
intersection observer,What is the Intersection Observer API?,Monitors element visibility,Styles elements,Compresses elements,Sorts elements,Monitors element visibility,,,,,,
logging,What is logging in programming?,Recording application events,Styling events,Compressing events,Sorting events,Recording application events,,,,,,
concepts,What are concepts in C++20?,Constraints on template parameters,Styled templates,Compressed templates,Sorted templates,Constraints on template parameters,,,,,,
fenwick tree,What is a Fenwick Tree?,A data structure for cumulative sums,Styled tree,Compressed tree,Sorted tree,A data structure for cumulative sums,,,,,,
executor service,What is the Executor Service in Java?,Manages thread pools,Styles threads,Compresses threads,Sorts threads,Manages thread pools,,,,,,
huffman coding,What is Huffman Coding?,A compression algorithm,Sorting algorithm,Styling algorithm,Encryption algorithm,A compression algorithm,,,,,,
descriptors,What are descriptors in Python?,Objects defining attribute access,Styled objects,Compressed objects,Sorted objects,Objects defining attribute access,,,,,,
sfinae,What does SFINAE stand for in C++?,Substitution Failure Is Not An Error,Styled Failure,Compressed Failure,Sorted Failure,Substitution Failure Is Not An Error,,,,,,
argparse,What is argparse in Python?,A library for command-line arguments,Styled arguments,Compressed arguments,Sorted arguments,A library for command-line arguments,,,,,,
shadow dom,What is the Shadow DOM?,Encapsulated DOM for web components,Styled DOM,Compressed DOM,Sorted DOM,Encapsulated DOM for web components,,,,,,
memory alignment,What is memory alignment?,Optimizing data placement in memory,Styling memory,Compressing memory,Sorting memory,Optimizing data placement in memory,,,,,,
custom event,What is a custom event in JavaScript?,User-defined events,Styled events,Compressed events,Sorted events,User-defined events,,,,,,
ast,What is an AST in programming?,Abstract Syntax Tree,Styled Tree,Compressed Tree,Sorted Tree,Abstract Syntax Tree,,,,,,
kmp algorithm,What is the KMP Algorithm?,String matching algorithm,Sorting algorithm,Compression algorithm,Encryption algorithm,String matching algorithm,,,,,,
manacher's algorithm,What is Manacher's Algorithm?,Finds longest palindromic substring,Sorts strings,Compresses strings,Styles strings,Finds longest palindromic substring,,,,,,
intl api,What is the Intl API in JavaScript?,Handles internationalization,Styles text,Compresses text,Sorts text,Handles internationalization,,,,,,
reservoir sampling,What is reservoir sampling?,Random sampling from a stream,Sorting streams,Compressing streams,Styling streams,Random sampling from a stream,,,,,,
struct module,What is the struct module in Python?,Handles binary data,Styles data,Compresses data,Sorts data,Handles binary data,,,,,,
fold expression,What is a fold expression in C++?,Simplifies variadic template operations,Styles templates,Compresses templates,Sorts templates,Simplifies variadic template operations,,,,,,
approximation algorithm,What is an approximation algorithm?,Provides near-optimal solutions,Provides exact solutions,Styles solutions,Compresses solutions,Provides near-optimal solutions,,,,,,
webgl,What is WebGL?,A JavaScript API for 3D graphics,Styled graphics,Compressed graphics,Sorted graphics,A JavaScript API for 3D graphics,,,,,,
code introspection,What is code introspection?,Examining code at runtime,Styling code,Compressing code,Sorting code,Examining code at runtime,,,,,,
error boundary,What is an error boundary in React?,Handles JavaScript errors in components,Styles errors,Compresses errors,Sorts errors,Handles JavaScript errors in components,,,,,,
memory order,What is memory order in concurrent programming?,Defines memory access ordering,Styles memory,Compresses memory,Sorts memory,Defines memory access ordering,,,,,,
tree shaking,What is tree shaking?,Removing unused code in JavaScript,Styling code,Compressing code,Sorting code,Removing unused code in JavaScript,,,,,,
static assert,What is a static assert in C++?,Compile-time assertion,Runtime assertion,Styled assertion,Compressed assertion,Compile-time assertion,,,,,,
fluent interface,What is a fluent interface?,Method chaining for readability,Styled interface,Compressed interface,Sorted interface,Method chaining for readability,,,,,,
server-side rendering,What is server-side rendering?,Rendering web pages on the server,Client-side rendering,Styled rendering,Compressed rendering,Rendering web pages on the server,,,,,,
monadic operations,What are monadic operations?,Chaining computations in monads,Styling computations,Compressing computations,Sorting computations,Chaining computations in monads,,,,,,
code linting,What is code linting?,Checking code for errors and style,Styling code,Compressing code,Sorting code,Checking code for errors and style,,,,,,
concurrent hashmap,What is a ConcurrentHashMap in Java?,Thread-safe hash map,Styled map,Compressed map,Sorted map,Thread-safe hash map,,,,,,
protocol (typing),What is the Protocol in Python typing?,Defines structural subtyping,Styles types,Compresses types,Sorts types,Defines structural subtyping,,,,,,
code splitting,What is code splitting?,Breaking code into smaller bundles,Styling code,Compressing code,Sorting code,Breaking code into smaller bundles,,,,,,
gil,What is the GIL in Python?,Global Interpreter Lock,Styled lock,Compressed lock,Sorted lock,Global Interpreter Lock,,,,,,
fork/join framework,What is the Fork/Join framework in Java?,Parallel task processing,Styled tasks,Compressed tasks,Sorted tasks,Parallel task processing,,,,,,
monte carlo method,What is the Monte Carlo method?,Uses random sampling for results,Sorts data,Compresses data,Styles data,Uses random sampling for results,,,,,,
virtual dom,What is the Virtual DOM?,In-memory representation of the DOM,Styled DOM,Compressed DOM,Sorted DOM,In-memory representation of the DOM,,,,,,
tag dispatch,What is tag dispatch in C++?,Selects function overloads via tags,Styles functions,Compresses functions,Sorts functions,Selects function overloads via tags,,,,,,
behavioral pattern,What is a behavioral design pattern?,Defines object communication,Creates objects,Styles objects,Compresses objects,Defines object communication,,,,,,
suffix array,What is a suffix array?,Array of string suffixes,Styled array,Compressed array,Sorted array,Array of string suffixes,,,,,,
data transformation,What is data transformation?,Converting data to a new format,Styling data,Compressing data,Sorting data,Converting data to a new format,,,,,,
api gateway,What is an API gateway?,Manages API requests,Styles APIs,Compresses APIs,Sorts APIs,Manages API requests,,,,,,
code scalability,What is code scalability?,Ability to handle increased load,Styling code,Compressing code,Sorting code,Ability to handle increased load,,,,,,
creational pattern,What is a creational design pattern?,Manages object creation,Defines behavior,Styles objects,Compresses objects,Manages object creation,,,,,,
game theory algorithm,What is a game theory algorithm?,Optimizes decisions in competitive scenarios,Sorts games,Compresses games,Styles games,Optimizes decisions in competitive scenarios,,,,,,
data normalization,What is data normalization in machine learning?,Scaling data to a standard range,Styling data,Compressing data,Sorting data,Scaling data to a standard range,,,,,,
content delivery network,What is a Content Delivery Network (CDN)?,Distributes content globally,Styles content,Compresses content,Sorts content,Distributes content globally,,,,,,
code reusability,What is code reusability?,Writing code that can be used multiple times,Styling code,Compressing code,Sorting code,Writing code that can be used multiple times,,,,,,
parallel algorithm,What is a parallel algorithm?,Executes tasks simultaneously,Executes tasks sequentially,Styles tasks,Compresses tasks,Executes tasks simultaneously,,,,,,
data anonymization,What is data anonymization?,Removing identifiable information,Styling data,Compressing data,Sorting data,Removing identifiable information,,,,,,
external sorting,What is external sorting?,Sorting large datasets using external memory,Sorting in memory,Styling data,Compressing data,Sorting large datasets using external memory,,,,,,
data compression,What is data compression?,Reducing data size,Increasing data size,Styling data,Sorting data,Reducing data size,,,,,,
code versioning,What is code versioning?,Tracking changes in code over time,Styling code,Compressing code,Sorting code,Tracking changes in code over time,,,,,,
stream processing,What is stream processing?,Processing data in real-time streams,Batch processing,Styling data,Compressing data,Processing data in real-time streams,,,,,,
approximate string matching,What is approximate string matching?,Finding strings with small differences,Exact string matching,Styling strings,Compressing strings,Finding strings with small differences,,,,,,
data visualization,What is data visualization?,Representing data graphically,Styling data,Compressing data,Sorting data,Representing data graphically,,,,,,
code review,What is code review?,Evaluating code for quality,Styling code,Compressing code,Sorting code,Evaluating code for quality,,,,,,
online algorithm,What is an online algorithm?,Processes data as it arrives,Processes all data at once,Styles data,Compresses data,Processes data as it arrives,,,,,,
data cleaning,What is data cleaning?,Removing errors from data,Styling data,Compressing data,Sorting data,Removing errors from data,,,,,,
webhooks,What are webhooks?,Event-driven HTTP callbacks,Styled callbacks,Compressed callbacks,Sorted callbacks,Event-driven HTTP callbacks,,,,,,
code automation,What is code automation?,Automating repetitive coding tasks,Styling code,Compressing code,Sorting code,Automating repetitive coding tasks,,,,,,
cache-oblivious algorithm,What is a cache-oblivious algorithm?,Optimizes for unknown cache sizes,Optimizes for known caches,Styles caches,Compresses caches,Optimizes for unknown cache sizes,,,,,,
data integration,What is data integration?,Combining data from multiple sources,Styling data,Compressing data,Sorting data,Combining data from multiple sources,,,,,,
single page application,What is a Single Page Application (SPA)?,A web app with dynamic content loading,Multi-page app,Styled app,Compressed app,A web app with dynamic content loading,,,,,,
memento pattern,What is the Memento pattern?,Saves and restores object state,Styles objects,Compresses objects,Sorts objects,Saves and restores object state,,,,,,
code deployment,What is code deployment?,Releasing code to production,Styling code,Compressing code,Sorting code,Releasing code to production,,,,,,
geometric algorithm,What is a geometric algorithm?,Solves problems in computational geometry,Sorts geometric data,Styles geometry,Compresses geometry,Solves problems in computational geometry,,,,,,
data pipeline,What is a data pipeline?,Automated flow of data processing,Styled data flow,Compressed data flow,Sorted data flow,Automated flow of data processing,,,,,,
code monitoring,What is code monitoring?,Tracking application performance,Styling code,Compressing code,Sorting code,Tracking application performance,,,,,,
probabilistic algorithm,What is a probabilistic algorithm?,Uses randomness for efficiency,Uses deterministic steps,Styles algorithms,Compresses algorithms,Uses randomness for efficiency,,,,,,
data governance,What is data governance?,Managing data policies and standards,Styling data,Compressing data,Sorting data,Managing data policies and standards,,,,,,
code collaboration,What is code collaboration?,Multiple developers working on code,Styling code,Compressing code,Sorting code,Multiple developers working on code,,,,,,
spatial data structure,What is a spatial data structure?,Organizes spatial data,Styles spatial data,Compresses spatial data,Sorts spatial data,Organizes spatial data,,,,,,
data auditing,,,,,,,,,,,,
variables,What is the primary purpose of variables in programming?,To store and manipulate data,To create loops,To define functions,To handle errors,To store and manipulate data,,,,,,
variables,Which of these is NOT a valid variable naming convention?,camelCase,PascalCase,kebab-case,snake_case,kebab-case,,,,,,
variables,What is variable scope in programming?,The data type of a variable,The region where a variable can be accessed,The value stored in a variable,The memory address of a variable,The region where a variable can be accessed,,,,,,
variables,What is the difference between 'let' and 'var' in JavaScript?,let has function scope, var has block scope,let has block scope, var has function scope,There is no difference,let is only for numbers,let has block scope, var has function scope,,,
variables,What is a constant variable?,A variable that can't be reassigned,A variable that changes frequently,A special type of loop,A function parameter,A variable that can't be reassigned,,,,,,
data types,Which of these is a primitive data type in most languages?,Array,Object,String,Class,String,,,,,,
data types,What is the main difference between float and double?,float has higher precision,double has higher precision,float is for integers,double is only for positive numbers,double has higher precision,,,,,,
data types,What is the size of a boolean in Java?,1 bit,1 byte,4 bytes,8 bytes,1 bit,,,,,,
data types,Which data type would be best for storing a person's age?,String,Integer,Boolean,Float,Integer,,,,,,
data types,What is type inference in programming?,Manually declaring variable types,Automatically determining variable types,Converting between types,Casting variables,Automatically determining variable types,,,,,,
constants,What is the purpose of constants in programming?,To store values that change frequently,To store values that shouldn't change,To create loops,To handle errors,To store values that shouldn't change,,,,,,
constants,How are constants typically declared in C++?,using the 'var' keyword,using the 'let' keyword,using the 'const' keyword,using the 'static' keyword,using the 'const' keyword,,,,,,
constants,What is a benefit of using constants?,They improve performance,They make code more maintainable and readable,They reduce memory usage,They make variables mutable,They make code more maintainable and readable,,,,,,
constants,Which of these is a valid constant naming convention?,CONSTANT_CASE,camelCase,PascalCase,snake_case,CONSTANT_CASE,,,,,,
constants,What happens if you try to modify a constant after declaration?,The value changes silently,A runtime error occurs,Nothing happens,The program compiles but won't run,A runtime error occurs,,,,,,
operators,What is the result of 5 + '5' in JavaScript?,'10',10,'55',Error,'55',,,,,,
operators,Which operator has the highest precedence?,+,*,(),-,(),,,,,,
operators,What does the ternary operator do?,Performs arithmetic,Returns one of two values based on a condition,Creates loops,Handles exceptions,Returns one of two values based on a condition,,,,,,
operators,What is the difference between == and === in JavaScript?,== compares value, === compares value and type,== compares type, === compares value,No difference,== is deprecated,== compares value, === compares value and type,,,
operators,What does the modulus operator (%) do?,Performs division,Returns the remainder of division,Raises to a power,Performs multiplication,Returns the remainder of division,,,,,,
arithmetic operations,What is the result of 7 / 2 in integer division?,3.5,3,4,3,3,,,,,,
arithmetic operations,What is operator precedence?,The order in which operators are evaluated,The speed of operations,The memory usage of operations,The type of operations,The order in which operators are evaluated,,,,,,
arithmetic operations,Which operation is performed first in 3 + 5 * 2?,Addition,Multiplication,Exponentiation,Modulus,Multiplication,,,,,,
arithmetic operations,What is the result of Math.pow(2, 3)?,6,8,9,5,8,,,,,
arithmetic operations,What does the increment operator (++) do?,Adds 1 to a variable,Subtracts 1 from a variable,Doubles a variable,Squares a variable,Adds 1 to a variable,,,,,,
logical operators,What is the result of true && false?,TRUE,FALSE,undefined,null,FALSE,,,,,,
logical operators,Which operator represents logical OR?,&&,||,!,??,||,,,,,,
logical operators,What is short-circuit evaluation in logical operators?,Evaluating both operands always,Stopping evaluation when the result is determined,Converting operands to strings,Reversing the operands,Stopping evaluation when the result is determined,,,,,,
logical operators,What does the logical NOT operator (!) do?,Inverts a boolean value,Performs addition,Creates a new variable,Handles exceptions,Inverts a boolean value,,,,,,
logical operators,What is the result of !(true || false)?,TRUE,FALSE,undefined,null,FALSE,,,,,,
relational operators,What does the '>' operator check?,If left value is greater than right,If values are equal,If left value is less than right,If values are different,If left value is greater than right,,,,,,
relational operators,What is the result of 5 >= 5?,TRUE,FALSE,0,1,TRUE,,,,,,
relational operators,Which operator checks for inequality?,!=,==,>=,<=,!=,,,,,,
relational operators,What is the difference between = and ==?,#NAME?, == is comparison,#NAME?, == is assignment,They are identical,#NAME?,#NAME?, == is comparison,,,
relational operators,What does the '===' operator do in JavaScript?,Compares value only,Compares value and type,Assigns a value,Checks for null,Compares value and type,,,,,,
bitwise operators,What does the bitwise AND (&) operator do?,Performs logical AND,Performs AND on each bit,Adds two numbers,Multiplies two numbers,Performs AND on each bit,,,,,,
bitwise operators,What is the result of 5 | 3?,7,1,15,8,7,,,,,,
bitwise operators,What does the left shift operator (<<) do?,Divides by 2,Multiplies by 2,Subtracts 1,Adds 1,Multiplies by 2,,,,,,
bitwise operators,Which operator flips all bits?,~,&,|,^,~,,,,,,
bitwise operators,What is XOR (^) operation result for 5 ^ 3?,6,1,7,8,6,,,,,,
assignment operators,What does the += operator do?,Adds and assigns,Subtracts and assigns,Multiplies and assigns,Divides and assigns,Adds and assigns,,,,,,
assignment operators,What is equivalent to x *= y?,x = x * y,x = x + y,x = x - y,x = x / y,x = x * y,,,,,,
assignment operators,Which operator increments then assigns?,=+,+=,++,None of these,None of these,,,,,,
assignment operators,What does the %= operator do?,Divides and assigns remainder,Multiplies and assigns,Adds and assigns,Subtracts and assigns,Divides and assigns remainder,,,,,,
assignment operators,What is the result of x = 5 after x += 3?,5,3,8,2,8,,,,,,
type casting,What is implicit type conversion?,Manual type change,Automatic type conversion by compiler,Type checking,Memory allocation,Automatic type conversion by compiler,,,,,,
type casting,What is the term for (int)5.5 in C++?,Implicit cast,Explicit cast,Type inference,Type checking,Explicit cast,,,,,,
type casting,What happens in Java when casting a double to int?,Decimal part is preserved,Decimal part is truncated,Compilation error,Runtime error,Decimal part is truncated,,,,,,
type casting,Which method converts string to integer in Python?,str(),int(),float(),bool(),int(),,,,,,
type casting,What is type coercion?,Manual type conversion,Automatic type conversion in expressions,Type checking,Memory management,Automatic type conversion in expressions,,,,,,
control structures,What is a control structure in programming?,Data storage mechanism,Code that directs program flow,Memory allocation tool,Error handling block,Code that directs program flow,,,,,,
control structures,Which is NOT a control structure?,if statement,for loop,Variable declaration,while loop,Variable declaration,,,,,,
control structures,What is the purpose of control structures?,To store data,To manage program execution flow,To allocate memory,To handle errors,To manage program execution flow,,,,,,
control structures,Which category does 'if-else' belong to?,Loop structure,Selection structure,Jump structure,Exception structure,Selection structure,,,,,,
control structures,What is the difference between control structures and functions?,Both are identical,Control structures direct flow, functions group code,Control structures store data, functions execute code,Control structures direct flow, functions group code,,,,
conditional statements,What is the purpose of 'if' statements?,To create loops,To make decisions in code,To define functions,To handle errors,To make decisions in code,,,,,,
conditional statements,What is the correct syntax for an 'if' statement in Python?,if condition then,if (condition),if condition:,if: condition,if condition:,,,,,,
conditional statements,What does 'else if' allow you to do?,Check multiple conditions,Create loops,Define functions,Handle errors,Check multiple conditions,,,,,,
conditional statements,Which keyword is used for switch statements in Java?,switch,select,case,check,switch,,,,,,
conditional statements,What is a ternary operator alternative to?,if-else statement,for loop,while loop,function definition,if-else statement,,,,,,
loops,What is the purpose of loops in programming?,To execute code repeatedly,To store data,To define functions,To handle errors,To execute code repeatedly,,,,,,
loops,Which loop is guaranteed to execute at least once?,for loop,while loop,do-while loop,if statement,do-while loop,,,,,,
loops,What is an infinite loop?,A loop that never terminates,A loop with no body,A loop with one iteration,A loop that handles errors,A loop that never terminates,,,,,,
loops,What is the difference between 'for' and 'while' loops?,for is infinite, while is finite,for is used when iterations are known, while when condition-based,No difference,for is deprecated,for is used when iterations are known, while when condition-based,,,
loops,What does the 'range()' function do in Python?,Creates a sequence of numbers,Handles errors,Defines functions,Stores data,Creates a sequence of numbers,,,,,,
break statement,What does the 'break' statement do?,Skips current iteration,Exits the loop entirely,Continues to next iteration,Restarts the loop,Exits the loop entirely,,,,,,
break statement,In which control structure is 'break' typically used?,if statements,Loops,Functions,Variable declarations,Loops,,,,,,
break statement,What is the difference between 'break' and 'continue'?,break exits loop, continue skips iteration,break skips iteration, continue exits loop,Both exit the loop,Both skip iteration,break exits loop, continue skips iteration,,,
break statement,Can 'break' be used in switch statements?,Yes, only in some languages,No, never,Yes, in most languages,Only in Python,Yes, in most languages,,
break statement,What happens after a 'break' executes?,Program terminates,Next loop iteration starts,Loop exits immediately,Function returns,Loop exits immediately,,,,,,
continue statement,What does 'continue' do in a loop?,Exits the loop,Skips current iteration,Restarts the program,Terminates the program,Skips current iteration,,,,,,
continue statement,In which loop can 'continue' be used?,Only for loops,Only while loops,Any loop,Only do-while loops,Any loop,,,,,,
continue statement,What is the difference between 'break' and 'continue' in a for loop?,break exits, continue skips to next iteration,both exit the loop,continue exits, break skips iteration,no difference,break exits, continue skips to next iteration,,,
continue statement,What happens when 'continue' executes in a while loop?,Loop condition is rechecked,Program exits,Loop restarts from beginning,Function returns,Loop condition is rechecked,,,,,,
continue statement,Can 'continue' be used outside loops?,Yes, in functions,Yes, in if statements,No, only inside loops,Yes, anywhere,No, only inside loops,
functions,What is a function in programming?,A data structure,A reusable block of code,A loop structure,A variable type,A reusable block of code,,,,,,
functions,What is a function parameter?,Value returned by function,Input passed to function,Function's name,Function's return type,Input passed to function,,,,,,
functions,What is the purpose of the 'return' statement?,To exit a function,To start a loop,To declare variables,To handle errors,To exit a function,,,,,,
functions,What is a pure function?,Function with side effects,Function that depends only on inputs and has no side effects,Function with no parameters,Function that modifies global state,Function that depends only on inputs and has no side effects,,,,,,
functions,What is function overloading?,Creating multiple functions with same name but different parameters,Calling a function recursively,Defining a function inside another function,Exporting a function,Creating multiple functions with same name but different parameters,,,,,,
function parameters,What are default parameters in functions?,Parameters that can't be changed,Parameters with predefined values if not provided,Parameters that must always be provided,Parameters that are global,Parameters with predefined values if not provided,,,,,,
function parameters,What is the difference between parameters and arguments?,Parameters are in definition, arguments are values passed,Arguments are in definition, parameters are values passed,They are identical,Parameters are only for loops,Parameters are in definition, arguments are values passed,,,
function parameters,What are variadic functions?,Functions with no parameters,Functions accepting variable number of arguments,Functions that return multiple values,Functions that can't be called,Functions accepting variable number of arguments,,,,,,
function parameters,What is pass-by-reference?,Copying argument values,Passing memory addresses of arguments,Passing function names,Passing loop counters,Passing memory addresses of arguments,,,,,,
function parameters,What is the purpose of the 'rest' parameter in JavaScript?,To stop parameter passing,To collect remaining arguments into an array,To skip parameters,To make parameters optional,To collect remaining arguments into an array,,,,,,
return statements,What does a return statement do in a function?,Starts a loop,Exits function and optionally returns a value,Declares variables,Handles errors,Exits function and optionally returns a value,,,,,,
return statements,Can a function have multiple return statements?,No, only one,Yes, but only one executes,No, it causes errors,Yes, and all execute,Yes, but only one executes,
return statements,What happens if a function has no return statement?,It returns undefined,It returns null,It returns 0,It causes an error,It returns undefined,,,,,,
return statements,What is the return type of a constructor?,void,The class type,int,boolean,The class type,,,,,,
return statements,Can you return multiple values from a function?,No, never,Yes, using arrays/objects,Only in some languages,Only if the function is pure,Yes, using arrays/objects,,,
scope,What is variable scope in programming?,Variable's data type,Region where variable is accessible,Variable's memory address,Variable's value,Region where variable is accessible,,,,,,
scope,What is the difference between local and global scope?,Local is function-wide, global is program-wide,Global is function-wide, local is program-wide,No difference,Local is for loops only,Local is function-wide, global is program-wide,,,
scope,What is block scope in JavaScript?,Scope within {} blocks,Scope within functions only,Global scope,No such concept,Scope within {} blocks,,,,,,
scope,What is lexical scoping?,Scope determined at runtime,Scope determined by function calls,Scope determined by where variables are defined,Scope that changes dynamically,Scope determined by where variables are defined,,,,,,
scope,What is the scope chain in JavaScript?,Hierarchy of variable access,Type of loop,Function call stack,Error handling mechanism,Hierarchy of variable access,,,,,,
global variables,What is a global variable?,Variable accessible only in functions,Variable accessible throughout program,Variable with no value,Variable that can't be changed,Variable accessible throughout program,,,,,,
global variables,Why are global variables generally discouraged?,They improve performance,They can cause naming conflicts and make code harder to maintain,They reduce memory usage,They make code run faster,They can cause naming conflicts and make code harder to maintain,,,,,,
global variables,How can you avoid global variables in JavaScript?,Using only let declarations,Using modules and closures,Using only const declarations,Using var declarations,Using modules and closures,,,,,,
global variables,What is the global object in browser JavaScript?,document,window,console,Math,window,,,,,,
global variables,How do global variables differ in Node.js vs browsers?,No difference,Node uses 'global' instead of 'window',Node doesn't have globals,Browsers don't have globals,Node uses 'global' instead of 'window',,,,,,
local variables,What is a local variable?,Variable accessible throughout program,Variable accessible only within its block/function,Variable with no value,Variable that can't be changed,Variable accessible only within its block/function,,,,,,
local variables,What is the lifetime of a local variable?,Entire program execution,Only while its block/function executes,Until manually deleted,Until program termination,Only while its block/function executes,,,,,,
local variables,Where are local variables stored in memory?,Heap,Stack,Global memory,Register,Stack,,,,,,
local variables,Can local variables have the same name as globals?,No, causes error,Yes, local shadows global,Only if types differ,Only in some languages,Yes, local shadows global,,,
local variables,What happens to local variables after function execution?,They become global,They are destroyed,They persist in memory,They become constants,They are destroyed,,,,,,
recursion,What is recursion in programming?,A type of loop,A function that calls itself,A variable declaration,A data structure,A function that calls itself,,,,,,
recursion,What is a base case in recursion?,The recursive call,The condition that stops recursion,The first function call,The return value,The condition that stops recursion,,,,,,
recursion,What is the main risk with recursion?,Improved performance,Stack overflow with deep recursion,Memory leaks,Slower execution,Stack overflow with deep recursion,,,,,,
recursion,Which problem is recursion well-suited for?,Iterating arrays,Tree traversal,Simple calculations,Variable assignment,Tree traversal,,,,,,
recursion,What is tail recursion?,Recursion with no base case,Recursion where the recursive call is the last operation,Recursion with multiple calls,Recursion with side effects,Recursion where the recursive call is the last operation,,,,,,
call stack,What is the call stack in programming?,Data structure storing function calls,Memory for variables,Hardware register,CPU cache,Data structure storing function calls,,,,,,
call stack,What happens when a function is called?,Frame is pushed onto call stack,Frame is popped from call stack,Stack is cleared,Memory is allocated,Frame is pushed onto call stack,,,,,,
call stack,What is stack overflow in recursion?,Stack has too few frames,Stack exceeds memory limits,Stack is empty,Stack frames are too small,Stack exceeds memory limits,,,,,,
call stack,How does the call stack handle function returns?,Pushes new frame,Pops current frame,Clears entire stack,Allocates more memory,Pops current frame,,,,,,
call stack,What is the relationship between call stack and recursion?,No relation,Each recursive call adds a stack frame,Recursion avoids using stack,Stack prevents recursion,Each recursive call adds a stack frame,,,,,,
syntax,What is syntax in programming?,Program logic,Set of rules for writing code,Program output,Memory management,Set of rules for writing code,,,,,,
syntax,What happens with syntax errors?,Runtime exceptions,Program runs incorrectly,Compilation fails,Memory leaks,Compilation fails,,,,,,
syntax,Which tool helps identify syntax errors?,Debugger,Compiler/Interpreter,Memory profiler,Performance analyzer,Compiler/Interpreter,,,,,,
syntax,What is syntactic sugar?,Harder-to-read syntax,More efficient syntax,Syntax alternatives that are easier to read,Low-level syntax,Syntax alternatives that are easier to read,,,,,,
syntax,What is the difference between syntax and semantics?,Syntax is meaning, semantics is structure,No difference,Syntax is structure, semantics is meaning,Syntax is for variables, semantics for functions,Syntax is structure, semantics is meaning,,
comments,What is the purpose of code comments?,To execute code,To document and explain code,To improve performance,To handle errors,To document and explain code,,,,,,
comments,Which is a valid single-line comment in Java?,// Comment,# Comment,/* Comment */,<!-- Comment -->,// Comment,,,,,,
comments,What is a docstring in Python?,A string variable,A multi-line comment,A documentation string for functions,A type of loop,A documentation string for functions,,,,,,
comments,Why should comments explain 'why' rather than 'what'?,Code already shows 'what',Comments can't describe 'what','Why' is less important,It's a convention,Code already shows 'what',,,,,,
comments,What is comment-driven development?,Writing comments before code,Writing code without comments,Using comments as tests,Deleting all comments,Writing comments before code,,,,,,
debugging,What is debugging in programming?,Writing code,Fixing errors in code,Compiling code,Documenting code,Fixing errors in code,,,,,,
debugging,What is a breakpoint in debugging?,Code comment,Point where execution pauses,Error message,Memory address,Point where execution pauses,,,,,,
debugging,Which tool is used for debugging?,Text editor,Compiler,Debugger,Linker,Debugger,,,,,,
debugging,What is step-through debugging?,Executing code line by line,Fixing syntax errors,Writing test cases,Optimizing code,Executing code line by line,,,,,,
debugging,What is a watch expression in debugging?,Code comment,Variable whose value is monitored,Error message,Memory allocation,Variable whose value is monitored,,,,,,
pseudocode,What is pseudocode?,Actual executable code,Text editor,Algorithm description in plain language,Programming language,Algorithm description in plain language,,,,,,
pseudocode,What is the purpose of pseudocode?,To execute programs,To plan algorithms before coding,To replace comments,To handle errors,To plan algorithms before coding,,,,,,
pseudocode,Which is a characteristic of good pseudocode?,Language-specific syntax,Detailed implementation,Language-independent structure,Complex terminology,Language-independent structure,,,,,,
pseudocode,How does pseudocode help in programming?,Improves performance,Makes code run faster,Clarifies logic before implementation,Reduces memory usage,Clarifies logic before implementation,,,,,,
pseudocode,What is the relationship between pseudocode and algorithms?,Pseudocode is algorithm implementation,Algorithms are pseudocode implementations,Pseudocode represents algorithms,No relationship,Pseudocode represents algorithms,,,,,,
flowcharts,What is a flowchart in programming?,Data structure,Visual representation of an algorithm,Programming language,Debugging tool,Visual representation of an algorithm,,,,,,
flowcharts,Which symbol represents a decision in flowcharts?,Rectangle,Diamond,Oval,Parallelogram,Diamond,,,,,,
flowcharts,What is the purpose of flowcharts?,To execute code,To visualize program logic,To improve performance,To allocate memory,To visualize program logic,,,,,,
flowcharts,What does a terminal symbol (oval) represent in flowcharts?,Process step,Start/End point,Input/Output,Decision,Start/End point,,,,,,
flowcharts,How do flowcharts help in programming?,Make code run faster,Reduce memory usage,Improve understanding of program flow,Eliminate bugs,Improve understanding of program flow,,,,,,
algorithms,What is an algorithm in programming?,Programming language,Step-by-step procedure to solve a problem,Data structure,Hardware component,Step-by-step procedure to solve a problem,,,,,,
algorithms,Which is a characteristic of a good algorithm?,Ambiguity,Inefficiency,Correctness,Complexity,Correctness,,,,,,
algorithms,What is algorithm analysis?,Writing algorithms,Studying algorithm performance and efficiency,Debugging algorithms,Compiling algorithms,Studying algorithm performance and efficiency,,,,,,
algorithms,What is the difference between an algorithm and a program?,Algorithm is abstract, program is concrete implementation,No difference,Program is abstract, algorithm is concrete,Programs are faster,Algorithm is abstract, program is concrete implementation,,,
algorithms,Which problem-solving approach do algorithms represent?,Random guessing,Systematic procedure,Trial and error,Intuition,Systematic procedure,,,,,,
time complexity,What does time complexity measure?,Code readability,Memory usage,Execution time relative to input size,Number of lines of code,Execution time relative to input size,,,,,,
time complexity,Which notation describes worst-case time complexity?,Big-O (O),Big-Theta (Θ),Big-Omega (Ω),Little-o (o),Big-O (O),,,,,,
time complexity,What is the time complexity of linear search?,O(1),O(log n),O(n),O(n²),O(n),,,,,,
time complexity,Which is faster: O(1) or O(n)?,O(1),O(n),Same speed,Depends on input,O(1),,,,,,
time complexity,What is the time complexity of binary search?,O(1),O(log n),O(n),O(n²),O(log n),,,,,,
classes,What is a class in OOP?,Data structure,Blueprint for creating objects,Function,Variable,Blueprint for creating objects,,,,,,
classes,What is instantiation in OOP?,Creating an object from a class,Deleting a class,Inheriting from a class,Modifying a class,Creating an object from a class,,,,,,
classes,Which keyword creates a class in Java?,object,class,new,struct,class,,,,,,
classes,What are class members?,Only methods,Only variables,Both variables and methods,Only constructors,Both variables and methods,,,,,,
classes,What is the relationship between classes and objects?,Class is instance of object,Object is instance of class,They are identical,No relationship,Object is instance of class,,,,,,
objects,What is an object in OOP?,Data type,Instance of a class,Function,Primitive value,Instance of a class,,,,,,
objects,What are object attributes?,Only methods,Properties/characteristics of object,Only constructors,Class definitions,Properties/characteristics of object,,,,,,
objects,What is object behavior in OOP?,Class variables,Methods/functions of an object,Constructors only,Static members,Methods/functions of an object,,,,,,
objects,How do objects communicate in OOP?,Through method calls,By sharing memory,Through inheritance,By modifying classes,Through method calls,,,,,,
objects,What is object identity in OOP?,Object's memory address,Object's class,Object's methods,Object's documentation,Object's memory address,,,,,,
encapsulation,What is encapsulation in OOP?,Bundling data with methods that operate on that data,Creating multiple objects,Inheriting properties,Implementing interfaces,Bundling data with methods that operate on that data,,,,,,
encapsulation,What is a benefit of encapsulation?,Increased complexity,Improved code maintainability and security,Reduced performance,Longer code,Improved code maintainability and security,,,,,,
encapsulation,How is encapsulation implemented in Java?,Using packages,Using access modifiers (public/private),Using inheritance,Using polymorphism,Using access modifiers (public/private),,,,,,
encapsulation,What is data hiding in encapsulation?,Making all data public,Restricting direct access to object's data,Deleting object data,Sharing data between objects,Restricting direct access to object's data,,,,,,
encapsulation,What is the relationship between encapsulation and getters/setters?,Getters/setters violate encapsulation,Getters/setters implement encapsulation,No relationship,Getters/setters replace encapsulation,Getters/setters implement encapsulation,,,,,,
inheritance,What is inheritance in OOP?,Creating objects,Deriving new classes from existing ones,Implementing interfaces,Encapsulating data,Deriving new classes from existing ones,,,,,,
inheritance,What is a superclass?,Child class,Parent class,Interface,Abstract method,Parent class,,,,,,
inheritance,Which keyword implements inheritance in Java?,inherit,extends,implements,super,extends,,,,,,
inheritance,What is method overriding in inheritance?,Creating new methods,Redefining inherited methods in subclass,Hiding methods,Deleting methods,Redefining inherited methods in subclass,,,,,,
inheritance,What is multiple inheritance?,Inheriting from one class,Inheriting from multiple classes,Implementing interfaces,Creating abstract classes,Inheriting from multiple classes,,,,,,
polymorphism,What is polymorphism in OOP?,Single form,Multiple forms,Same name,Same implementation,Multiple forms,,,,,,
polymorphism,What is method overloading?,Same name, different parameters,Same name, same parameters,Different names, same parameters,Different names, different parameters,Same name, different parameters,
polymorphism,What is runtime polymorphism achieved through?,Method overloading,Method overriding,Constructors,Static methods,Method overriding,,,,,,
polymorphism,Which OOP concept enables polymorphism?,Encapsulation,Inheritance,Abstraction,Objects,Inheritance,,,,,,
polymorphism,What is the benefit of polymorphism?,Increased complexity,More flexible and reusable code,Reduced performance,Longer compilation,More flexible and reusable code,,,,,,
abstraction,What is abstraction in OOP?,Showing implementation details,Hiding implementation details,Creating objects,Inheriting classes,Hiding implementation details,,,,,,
abstraction,How is abstraction achieved in Java?,Using concrete classes,Using abstract classes/interfaces,Using final classes,Using private constructors,Using abstract classes/interfaces,,,,,,
abstraction,What is an abstract class?,Class that can be instantiated,Class that cannot be instantiated,Final class,Interface,Class that cannot be instantiated,,,,,,
abstraction,What is the purpose of abstraction?,Increase complexity,Reduce complexity by showing only essentials,Improve performance,Reduce memory usage,Reduce complexity by showing only essentials,,,,,,
abstraction,What is the difference between abstraction and encapsulation?,Abstraction hides details, encapsulation bundles data/methods,No difference,Encapsulation hides details, abstraction bundles data/methods,Abstraction is for inheritance,Abstraction hides details, encapsulation bundles data/methods,,,
interfaces,What is an interface in OOP?,Concrete class,Abstract class,Contract specifying what a class can do,Implementation,Contract specifying what a class can do,,,,,,
interfaces,How do interfaces differ from abstract classes?,Interfaces can have implementations,Abstract classes can have implementations,No difference,Interfaces are concrete,Abstract classes can have implementations,,,,,,
interfaces,Which keyword defines an interface in Java?,abstract,interface,class,implements,interface,,,,,,
interfaces,What is a benefit of using interfaces?,Tight coupling,Loose coupling and polymorphism,Better performance,Reduced memory usage,Loose coupling and polymorphism,,,,,,
interfaces,Can a class implement multiple interfaces?,No, only one,Yes, multiple interfaces,Only in some languages,Only if interfaces are small,Yes, multiple interfaces,,,
abstract classes,What is an abstract class?,Class that can be instantiated,Class that cannot be instantiated,Interface,Final class,Class that cannot be instantiated,,,,,,
abstract classes,What can abstract classes contain?,Only abstract methods,Both abstract and concrete methods,Only concrete methods,Only variables,Both abstract and concrete methods,,,,,,
abstract classes,Which keyword declares an abstract method?,abstract,virtual,override,static,abstract,,,,,,
abstract classes,What is the purpose of abstract classes?,To create objects directly,To provide partial implementation and require subclasses to complete,To replace interfaces,To improve performance,To provide partial implementation and require subclasses to complete,,,,,,
abstract classes,How do abstract classes differ from interfaces?,Abstract classes can have state, interfaces can't,No difference,Interfaces can have state, abstract classes can't,Abstract classes are faster,Abstract classes can have state, interfaces can't,,,
constructors,What is a constructor in OOP?,Regular method,Special method for object initialization,Static method,Abstract method,Special method for object initialization,,,,,,
constructors,When is a constructor called?,When object is destroyed,When object is created,When class is defined,When method is called,When object is created,,,,,,
constructors,What is a default constructor?,Constructor with parameters,Constructor provided by compiler if none defined,Abstract constructor,Static constructor,Constructor provided by compiler if none defined,,,,,,
constructors,What is constructor overloading?,Multiple constructors with different parameters,Single constructor,Inheriting constructors,Deleting constructors,Multiple constructors with different parameters,,,,,,
constructors,Can constructors return values?,Yes, always,No, never,Yes, but only null,Yes, but only this,No, never,
destructors,What is a destructor in OOP?,Method for object initialization,Method for object cleanup,Static method,Abstract method,Method for object cleanup,,,,,,
destructors,When is a destructor called?,When object is created,When object is destroyed,When class is defined,When method is called,When object is destroyed,,,,,,
destructors,Which symbol is used for destructor in C++?,!,~,*,&,~,,,,,,
destructors,What is the purpose of destructors?,Allocate memory,Release resources before object destruction,Create objects,Inherit classes,Release resources before object destruction,,,,,,
destructors,Are destructors necessary in garbage-collected languages?,Always,Sometimes for non-memory resources,Never,Only for performance,Sometimes for non-memory resources,,,,,,
method overloading,What is method overloading?,Same name, different parameters,Same name, same parameters,Different names, same parameters,Different names, different parameters,Same name, different parameters,
method overloading,Which can be overloaded?,Only methods,Only constructors,Both methods and constructors,Neither methods nor constructors,Both methods and constructors,,,,,,
method overloading,What is considered in method overloading?,Return type only,Parameter types and count,Method name only,Access modifier,Parameter types and count,,,,,,
method overloading,Can overloaded methods have different return types?,Yes, if parameters differ,No, never,Yes, always,Only if static,Yes, if parameters differ,,
method overloading,What is the benefit of overloading?,Increased complexity,Improved readability with similar operations,Reduced performance,Longer code,Improved readability with similar operations,,,,,,
method overriding,What is method overriding?,Same name, same parameters in subclass,Same name, different parameters,Different names, same parameters,Different names, different parameters,Same name, same parameters in subclass,
method overriding,Which keyword is used for overriding in Java?,overload,override,extends,implements,override,,,,,,
method overriding,What is required for method overriding?,Same name only,Same name and compatible return type,Same name, parameters, and return type,Same name and different parameters,Same name, parameters, and return type,,
method overriding,What is the @Override annotation for?,To force compilation error if not actually overriding,To improve performance,To allow overloading,To create abstract methods,To force compilation error if not actually overriding,,,,,,
method overriding,What is dynamic method dispatch?,Compile-time binding,Runtime binding of overridden methods,Static method calling,Constructor chaining,Runtime binding of overridden methods,,,,,,
access modifiers,What are access modifiers in OOP?,Keywords controlling access to classes/members,Method parameters,Return types,Exception handlers,Keywords controlling access to classes/members,,,,,,
access modifiers,Which is NOT an access modifier in Java?,public,private,protected,package,package,,,,,,
access modifiers,What does 'private' access mean?,Accessible anywhere,Accessible only within same class,Accessible within package,Accessible by subclasses,Accessible only within same class,,,,,,
access modifiers,What is the default access in Java (no modifier specified)?,public,private,protected,Package-private,Package-private,,,,,,
access modifiers,What does 'protected' access allow?,Access only within class,Access within package and by subclasses,Access anywhere,No access,Access within package and by subclasses,,,,,,
static methods,What is a static method?,Method that can't be called,Method bound to class rather than instances,Abstract method,Final method,Method bound to class rather than instances,,,,,,
static methods,How do you call a static method?,Using object reference,Using class name,Using super keyword,Using this keyword,Using class name,,,,,,
static methods,What can static methods access?,Instance variables,Static variables,Both instance and static,Neither,Static variables,,,,,,
static methods,Why use static methods?,For object-specific behavior,For utility functions not needing object state,To override in subclasses,To implement interfaces,For utility functions not needing object state,,,,,,
static methods,Can static methods be overridden?,Yes, always,No, never,Only if final,Only in abstract classes,No, never,,,
static variables,What is a static variable?,Variable unique to each object,Variable shared by all class instances,Local variable,Parameter variable,Variable shared by all class instances,,,,,,
static variables,Where is static memory allocated?,Stack,Heap,Static memory area,Register,Static memory area,,,,,,
static variables,When is static memory allocated?,When object is created,At class loading time,When method is called,At program termination,At class loading time,,,,,,
static variables,What is a use case for static variables?,Object-specific state,Class-wide counters or constants,Local calculations,Method parameters,Class-wide counters or constants,,,,,,
static variables,How do static variables differ from instance variables?,Static per object, instance per class,Static per class, instance per object,No difference,Static are faster,Static per class, instance per object,,,
instance variables,What are instance variables?,Variables shared by all objects,Variables unique to each object,Static variables,Local variables,Variables unique to each object,,,,,,
instance variables,Where are instance variables stored?,Stack,Heap,Static memory,Register,Heap,,,,,,
instance variables,When is memory allocated for instance variables?,At class loading,When object is created,When method is called,At program termination,When object is created,,,,,,
instance variables,What is the default value of instance variables?,null,0,Depends on type,No default value,Depends on type,,,,,,
instance variables,How do instance variables differ from local variables?,Instance are declared in methods, local in class,Instance are declared in class, local in methods,No difference,Instance are static,Instance are declared in class, local in methods,,,
scala,What is a case class in Scala?,A class for immutable data modeling,A class for looping,A class that cannot be instantiated,A class for exception handling,A class for immutable data modeling,,,,,,
scala,What does the 'implicit' keyword in Scala do?,Marks a class as abstract,Automatically passes or converts parameters,Defines a constant,Prevents method overriding,Automatically passes or converts parameters,,,,,,
scala,What is a trait in Scala?,A loop structure,An interface with concrete methods,A variable type,A function definition,An interface with concrete methods,,,,,,
scala,What is a sealed trait in Scala?,A trait that cannot be extended,A trait restricted to a file,A trait with no methods,A trait for data storage,A trait restricted to a file,,,,,,
scala,What is the purpose of an Option in Scala?,To handle null values safely,To define loops,To create arrays,To manage threads,To handle null values safely,,,,,,
scala,What is a for comprehension in Scala?,A loop for arrays,A syntax for monadic operations,A function declaration,A class definition,A syntax for monadic operations,,,,,,
scala,What does currying mean in Scala?,Defining multiple classes,Transforming a function to a chain of single-argument functions,Creating loops,Handling exceptions,Transforming a function to a chain of single-argument functions,,,,,,
scala,What is a companion object in Scala?,A loop helper,An object with the same name as a class,A variable container,A function wrapper,An object with the same name as a class,,,,,,
scala,What is a type class in Scala?,A class for loops,A pattern for defining behavior via implicits,A class for arrays,A class for exceptions,A pattern for defining behavior via implicits,,,,,,
scala,What is pattern matching in Scala?,A way to compare strings,A mechanism to match values against patterns,A function call,A variable assignment,A mechanism to match values against patterns,,,,,,
python,What is a list comprehension in Python?,A method for file I/O,A concise way to create lists,A type of loop,A way to define functions,A concise way to create lists,,,,,,
python,What does the 'pandas' library in Python handle?,Network programming,Data analysis and manipulation,Web development,Graphics rendering,Data analysis and manipulation,,,,,,
python,What is a context manager in Python?,A tool for managing resources,A function for loops,A class for arrays,A variable type,A tool for managing resources,,,,,,
python,What is a decorator in Python?,A loop structure,A function that modifies another function,A variable container,A class definition,A function that modifies another function,,,,,,
python,What does the 'zip' function do in Python?,Compresses files,Combines multiple iterables into tuples,Creates arrays,Handles exceptions,Combines multiple iterables into tuples,,,,,,
python,What is a generator in Python?,A function that yields values one at a time,A class for loops,A variable type,A loop structure,A function that yields values one at a time,,,,,,
python,What is the purpose of 'docstring' in Python?,To define loops,To provide documentation for code,To handle errors,To create arrays,To provide documentation for code,,,,,,
python,What is 'pathlib' in Python?,A library for file system paths,A graphics library,A networking tool,A testing framework,A library for file system paths,,,,,,
python,What are 'dataclasses' in Python?,Classes for exception handling,Classes for simplified data storage,Classes for looping,Classes for threading,Classes for simplified data storage,,,,,,
python,What is a metaclass in Python?,A class for defining other classes,A loop helper,A variable container,A function wrapper,A class for defining other classes,,,,,,
c++,What is the purpose of a smart pointer in C++?,To create loops,To manage memory automatically,To handle file operations,To increase execution speed,To manage memory automatically,,,,,,
c++,What is the STL in C++?,A testing framework,A standard template library,A graphics library,A database connector,A standard template library,,,,,,
c++,What is RAII in C++?,A loop optimization,Resource Acquisition Is Initialization,A threading model,A graphics technique,Resource Acquisition Is Initialization,,,,,,
c++,What is a variadic template in C++?,A template with fixed parameters,A template accepting variable arguments,A class for arrays,A loop structure,A template accepting variable arguments,,,,,,
c++,What is move semantics in C++?,A way to copy objects,A way to transfer resources efficiently,A loop mechanism,A function call,A way to transfer resources efficiently,,,,,,
c++,What does 'constexpr' mean in C++?,A runtime function,A compile-time constant expression,A variable type,A loop keyword,A compile-time constant expression,,,,,,
c++,What is an inline function in C++?,A function executed in a loop,A function expanded at the call site,A class method,A variable wrapper,A function expanded at the call site,,,,,,
c++,What is SFINAE in C++?,A graphics library,Substitution Failure Is Not An Error,A testing framework,A threading model,Substitution Failure Is Not An Error,,,,,,
c++,What is CRTP in C++?,A loop optimization,Curiously Recurring Template Pattern,A variable type,A function wrapper,Curiously Recurring Template Pattern,,,,,,
c++,What does 'noexcept' specify in C++?,A function cannot throw exceptions,A function must throw exceptions,A loop condition,A variable type,A function cannot throw exceptions,,,,,,
c,What is the size of an `int` in C (on most systems)?,4 bytes,2 bytes,8 bytes,Depends on compiler,4 bytes,,,,,,
c,Which keyword is used to define a constant in C?,const,define,var,static,const,,,,,,
c,What does `printf` return?,Number of characters printed,Void,The string printed,Nothing,Number of characters printed,,,,,,
c,What is the purpose of `#include <stdio.h>`?,To use input/output functions,To create loops,To define macros,To allocate memory,To use input/output functions,,,,,,
c,Which of these is the correct syntax for a `for` loop in C?,for(int i=0; i<10; i++),loop i from 0 to 10,next i,for i in range(10),for(int i=0; i<10; i++),,,,  ,,
c,What is the result of `5 / 2` in C?,2,2.5,3,2,2,,,,,,
c,Which symbol is used for the address-of operator?,&,@,#,$,&,,,,,,
c,Which C library provides memory allocation functions?,stdlib.h,stdio.h,string.h,ctype.h,stdlib.h,,,,,,
c,What does the `return` keyword do in a function?,Returns a value to the caller,Declares a variable,Loops to start,Ends the program,Returns a value to the caller,,,,,,
c,What is a pointer in C?,A variable that stores memory addresses,A type of loop,A file descriptor,A reserved keyword,A variable that stores memory addresses,,,,,,
java,What is the Comparable interface in Java used for?,Handling file I/O,Enabling object comparison,Managing threads,Defining GUI components,Enabling object comparison,,,,,,
java,What is JDBC in Java?,A web server,A database connectivity API,A threading framework,A graphics library,A database connectivity API,,,,,,
java,What is the Stream API in Java?,A graphics rendering tool,A functional-style data processing API,A networking library,A testing framework,A functional-style data processing API,,,,,,
java,What is a CompletableFuture in Java?,A loop structure,An asynchronous computation handler,A variable container,A class definition,An asynchronous computation handler,,,,,,
java,What is the Executor Service in Java?,A graphics library,A thread pool management framework,A database connector,A testing framework,A thread pool management framework,,,,,,
java,What is the Lock interface in Java used for?,Defining loops,Synchronizing threads,Handling files,Creating arrays,Synchronizing threads,,,,,,
java,What are annotations in Java?,Loop helpers,Metadata for code,Variable containers,Function wrappers,Metadata for code,,,,,,
java,What is the Cloneable interface in Java used for?,Handling exceptions,Enabling object cloning,Managing threads,Defining GUI components,Enabling object cloning,,,,,,
java,What is a ConcurrentHashMap in Java?,A loop structure,A thread-safe hash map,A variable type,A function wrapper,A thread-safe hash map,,,,,,
java,What is a dynamic proxy in Java?,A loop optimization,A runtime proxy for interfaces,A variable container,A function wrapper,A runtime proxy for interfaces,,,,,,
javascript,What is an arrow function in JavaScript?,A class definition,A concise function syntax,A loop construct,A function with no return value,A concise function syntax,,,,,,
javascript,What is hoisting in JavaScript?,Creating objects,Moving declarations to the top,Handling exceptions,Optimizing code execution,Moving declarations to the top,,,,,,
javascript,What is a promise in JavaScript?,A loop structure,An object representing asynchronous results,A variable container,A class definition,An object representing asynchronous results,,,,,,
javascript,What is the event loop in JavaScript?,A graphics renderer,A mechanism for handling asynchronous tasks,A testing framework,A database connector,A mechanism for handling asynchronous tasks,,,,,,
javascript,What is an IIFE in JavaScript?,A loop structure,An Immediately Invoked Function Expression,A variable type,A class definition,An Immediately Invoked Function Expression,,,,,,
javascript,What is the spread operator in JavaScript?,A loop keyword,Expands elements in arrays or objects,A function call,A variable type,Expands elements in arrays or objects,,,,,,
javascript,What is event bubbling in JavaScript?,A graphics effect,Event propagation from child to parent,A loop mechanism,A variable wrapper,Event propagation from child to parent,,,,,,
javascript,What is a proxy object in JavaScript?,A loop helper,An object for intercepting operations,A variable container,A function wrapper,An object for intercepting operations,,,,,,
javascript,What is a WeakMap in JavaScript?,A loop structure,A map with weakly held keys,A variable type,A class definition,A map with weakly held keys,,,,,,
loops,What is the purpose of a loop?,To handle errors,To repeat a block of code,To define functions,To store data,To repeat a block of code,,,,,,
loops,Which loop executes at least once?,Nested loop,Do-while loop,While loop,For loop,Do-while loop,,,,,,
loops,What is a for loop typically used for?,Handling errors,Iterating over a known number of elements,Defining functions,Storing data,Iterating over a known number of elements,,,,,,
loops,What is a while loop’s condition checked?,After the loop body,Before the loop body,During execution,At the end,Before the loop body,,,,,,
loops,What is a nested loop in programming?,A loop that runs infinitely,A loop inside another loop,A loop with no condition,A loop that breaks immediately,A loop inside another loop,,,,,,
loops,What does the break statement do in a loop?,Continues to the next iteration,Exits the loop immediately,Restarts the loop,Pauses the loop,Exits the loop immediately,,,,,,
loops,What does the continue statement do in a loop?,Exits the loop immediately,Skips the current iteration and proceeds to the next,Restarts the loop,Pauses the loop,Skips the current iteration and proceeds to the next,,,,,,
loops,What is an infinite loop?,A loop that never ends,A loop that runs once,A loop with no body,A loop that breaks immediately,A loop that never ends,,,,,,
loops,What is the role of the loop counter in a for loop?,To store data,To control the number of iterations,To break the loop,To skip iterations,To control the number of iterations,,,,,,
loops,What is a foreach loop used for?,Iterating over a collection or array,Running a loop infinitely,Defining a function,Handling exceptions,Iterating over a collection or array,,,,,,
javascript,What is async/await in JavaScript?,A loop optimization,A syntax for asynchronous programming,A variable container,A function wrapper,A syntax for asynchronous programming,,,,,,
oop,What is encapsulation in OOP?,Both combining data and methods and hiding implementation details,Reusing code,Creating multiple classes,Inheriting properties,Both combining data and methods and hiding implementation details,,,,,,
oop,What is polymorphism in OOP?,Inheriting properties,Using one interface for multiple data types,Defining abstract methods,Creating multiple classes,Using one interface for multiple data types,,,,,,
oop,What is inheritance in OOP?,Hiding data,Reusing code from a base class,Creating multiple objects,Encapsulating methods,Reusing code from a base class,,,,,,
oop,What is an abstract class in OOP?,A class that cannot be instantiated,A class with no methods,A class for looping,A class for variables,A class that cannot be instantiated,,,,,,
oop,What is an interface in OOP?,A loop structure,A contract for classes to implement,A variable container,A function wrapper,A contract for classes to implement,,,,,,
oop,What is method overriding in OOP?,Defining multiple methods,Redefining a base class method,A loop mechanism,A variable assignment,Redefining a base class method,,,,,,
oop,What is access modifier in OOP?,A loop keyword,Controls visibility of class members,A function call,A variable type,Controls visibility of class members,,,,,,
oop,What is a sealed class in OOP?,A class for arrays,A class that cannot be inherited,A variable container,A function wrapper,A class that cannot be inherited,,,,,,
oop,What is dynamic binding in OOP?,A loop optimization,Resolving method calls at runtime,A variable type,A function wrapper,Resolving method calls at runtime,,,,,,
oop,What is abstraction in OOP?,Combining data and methods,Hiding implementation details,Creating multiple classes,Inheriting properties,Hiding implementation details,,,,,,
dsa,What is a binary search algorithm?,Sorts elements in ascending order,Searches by dividing the search space in half,Uses a hash table,Searches linearly through all elements,Searches by dividing the search space in half,,,,,,
dsa,What is a linked list in DSA?,A tree-based structure,A sequence of nodes with pointers,A fixed-size data structure,A collection of indexed elements,A sequence of nodes with pointers,,,,,,
dsa,What is a stack in DSA?,A tree structure,A LIFO data structure,A FIFO data structure,A graph structure,A LIFO data structure,,,,,,
dsa,What is a queue in DSA?,A tree structure,A FIFO data structure,A LIFO data structure,A graph structure,A FIFO data structure,,,,,,
dsa,What is a binary tree in DSA?,A linear data structure,A hierarchical data structure with two children per node,A graph with cycles,A hash table,A hierarchical data structure with two children per node,,,,,,
dsa,What is a graph in DSA?,A linear data structure,A collection of nodes and edges,A fixed-size array,A queue structure,A collection of nodes and edges,,,,,,
dsa,What is an AVL tree in DSA?,A self-balancing binary search tree,A linear list,A hash table,A queue structure,A self-balancing binary search tree,,,,,,
dsa,What is a red-black tree in DSA?,A linear data structure,A self-balancing binary search tree,A graph with cycles,A stack structure,A self-balancing binary search tree,,,,,,
dsa,What is a trie in DSA?,A tree for storing strings,A linear array,A hash table,A queue structure,A tree for storing strings,,,,,,
dsa,What is a hash table in DSA?,A tree structure,A data structure for key-value pairs,A linear list,A stack structure,A data structure for key-value pairs,,,,,,
functions,What is a function in programming?,A data structure,A block of reusable code,A loop structure,A variable type,A block of reusable code,,,,,,
functions,What is a function parameter?,A constant,A value passed to the function,A global variable,A value returned by the function,A value passed to the function,,,,,,
functions,What is a lambda function in programming?,A named function,An anonymous function,A loop structure,A variable type,An anonymous function,,,,,,
functions,What is function composition in programming?,Combining multiple functions into one,Defining a loop,Handling exceptions,Creating arrays,Combining multiple functions into one,,,,,,
functions,What is a pure function in programming?,A function with side effects,A function that always returns the same output for the same input,A function with no return value,A function that modifies global state,A function that always returns the same output for the same input,,,,,,
functions,What is a recursive function in programming?,A function that calls itself,A function with no parameters,A function that loops infinitely,A function that returns void,A function that calls itself,,,,,,
functions,What is a higher-order function in programming?,A function with no return value,A function that takes or returns another function,A loop structure,A variable type,A function that takes or returns another function,,,,,,
functions,What does a function signature include?,The function’s loop structure,The function’s name and parameter types,The function’s variables,The function’s body,The function’s name and parameter types,,,,,,
functions,What is a default parameter in a function?,A parameter that cannot be changed,A parameter with a predefined value if not provided,A parameter that must be provided,A parameter that is global,A parameter with a predefined value if not provided,,,,,,
functions,What is a variadic function in programming?,A function with no parameters,A function that accepts a variable number of arguments,A function that returns void,A function with a fixed number of parameters,A function that accepts a variable number of arguments,,,,,,
variables,What is a variable in programming?,A method,A labeled storage for data,A loop,A function,A labeled storage for data,,,,,,
variables,What is a global variable?,Used only in loops,Accessible throughout the program,Immutable,Accessible only in a function,Accessible throughout the program,,,,,,
variables,What is variable initialization?,Using a variable without a value,Assigning a value when declaring a variable,Defining a loop,Creating an array,Assigning a value when declaring a variable,,,,,,
variables,What is type inference in programming?,Manually specifying types,Automatically deducing variable types,Defining loops,Handling exceptions,Automatically deducing variable types,,,,,,
variables,What is a local variable in programming?,A variable accessible throughout the program,A variable defined within a function or block,A variable that cannot be modified,A variable shared across threads,A variable defined within a function or block,,,,,,
variables,What does variable scope refer to?,The size of the variable,The region of code where the variable is accessible,The type of the variable,The value of the variable,The region of code where the variable is accessible,,,,,,
variables,What is a constant variable?,A variable that can be changed,A variable that cannot be changed after initialization,A variable with no value,A variable that is global,A variable that cannot be changed after initialization,,,,,,
variables,What is a static variable in programming?,A variable that changes with each function call,A variable that retains its value between function calls,A variable that cannot be accessed,A variable with no type,A variable that retains its value between function calls,,,,,,
variables,What is variable shadowing in programming?,Hiding a variable in an outer scope with a variable in an inner scope,Changing a variable’s type,Deleting a variable,Copying a variable’s value,Hiding a variable in an outer scope with a variable in an inner scope,,,,,,
variables,What is a mutable variable?,A variable that cannot be changed,A variable that can be changed after initialization,A variable with no type,A variable that is global,A variable that can be changed after initialization,,,,,,
arrays,What is an array in programming?,A loop,A collection of elements,A function,A single variable,A collection of elements,,,,,,
arrays,How are array elements accessed?,By their size,By their index,By their value,By their data type,By their index,,,,,,
arrays,What is a multidimensional array?,An array with one element,An array of arrays,A single variable,A loop structure,An array of arrays,,,,,,
arrays,What is array slicing in programming?,Creating a new array,Extracting a portion of an array,Sorting an array,Looping over an array,Extracting a portion of an array,,,,,,
arrays,What is the length of an array?,The number of elements it can hold,The size of each element,The total memory it occupies,The number of dimensions,The number of elements it can hold,,,,,,
arrays,What is array initialization in programming?,Accessing array elements,Assigning initial values to an array,Deleting an array,Sorting an array,Assigning initial values to an array,,,,,,
arrays,What is a dynamic array?,An array with a fixed size,An array that can grow or shrink in size,An array with no elements,An array that cannot be modified,An array that can grow or shrink in size,,,,,,
arrays,What does array concatenation mean?,Splitting an array into parts,Combining two or more arrays into one,Sorting an array,Reversing an array,Combining two or more arrays into one,,,,,,
arrays,What is an array index out of bounds error?,Accessing an element that doesn’t exist,Initializing an array,Sorting an array,Deleting an array,Accessing an element that doesn’t exist,,,,,,
arrays,What is a sparse array?,An array with all elements initialized,An array with mostly empty or undefined elements,An array with duplicate elements,An array with fixed size,An array with mostly empty or undefined elements,,,,,,
conditionals,What is a conditional statement?,Stores data,Tests a condition and executes code,Defines a function,Repeats code,Tests a condition and executes code,,,,,,
conditionals,What is an 'if-else' statement used for?,Data storage,Decision-making,Function definition,Looping,Decision-making,,,,,,
conditionals,What is a switch statement used for?,Looping,Handling multiple conditions,Defining functions,Storing data,Handling multiple conditions,,,,,,
conditionals,What is short-circuit evaluation in conditionals?,Evaluating all conditions,Stopping evaluation when the result is determined,Defining loops,Creating arrays,Stopping evaluation when the result is determined,,,,,,
conditionals,What is a nested if statement?,An if statement inside another if statement,An if statement with no condition,An if statement that loops,An if statement with multiple conditions,An if statement inside another if statement,,,,,,
conditionals,What does the else-if statement do?,Executes code if the previous condition is false,Repeats code,Defines a loop,Breaks a loop,Executes code if the previous condition is false,,,,,,
conditionals,What is a ternary operator in programming?,A loop construct,A shorthand for an if-else statement,A function definition,A variable type,A shorthand for an if-else statement,,,,,,
conditionals,What is a logical operator in conditionals?,An operator that performs arithmetic,An operator that combines conditions,An operator that loops,An operator that defines functions,An operator that combines conditions,,,,,,
conditionals,What does the default case in a switch statement do?,Executes if no other case matches,Repeats the switch block,Defines a loop,Breaks the switch block,Executes if no other case matches,,,,,,
conditionals,What is a guard statement in programming?,A statement that exits early if a condition is not met,A statement that loops,A statement that defines a function,A statement that creates an array,A statement that exits early if a condition is not met,,,,,,
exception handling,What is exception handling?,Creating loops,Managing runtime errors,Optimizing code,Defining classes,Managing runtime errors,,,,,,
exception handling,What does a try-catch block do?,Optimizes memory,Handles exceptions,Declares variables,Defines a loop,Handles exceptions,,,,,,
exception handling,What is a checked exception?,An exception caught at runtime,An exception checked at compile-time,A loop error,A variable error,An exception checked at compile-time,,,,,,
exception handling,What is the finally block used for?,Defining loops,Executing code regardless of exception,Handling arrays,Creating variables,Executing code regardless of exception,,,,,,
exception handling,What is an unchecked exception?,An exception checked at compile-time,An exception detected at runtime,A loop error,A syntax error,An exception detected at runtime,,,,,,
exception handling,What does the throw keyword do in exception handling?,Catches an exception,Creates and throws a new exception,Defines a loop,Ignores an exception,Creates and throws a new exception,,,,,,
exception handling,What is exception propagation?,Handling an exception locally,Passing an exception to the caller,Defining a loop,Creating an array,Passing an exception to the caller,,,,,,
exception handling,What is a custom exception in programming?,A built-in exception,An exception defined by the programmer,An exception that cannot be caught,An exception for loops,An exception defined by the programmer,,,,,,
exception handling,What does the throws keyword specify in a method?,The exceptions a method might throw,The variables a method uses,The loops a method contains,The arrays a method creates,The exceptions a method might throw,,,,,,
exception handling,What is a try-with-resources statement in Java?,A loop construct,Automatically closes resources,Handles arrays,Defines variables,Automatically closes resources,,,,,,
recursion,What is recursion in programming?,A class definition,A function calling itself,A variable assignment,A loop that runs indefinitely,A function calling itself,,,,,,
recursion,What is a base case in recursion?,The return value,The condition to stop recursion,The function parameter,The loop condition,The condition to stop recursion,,,,,,
recursion,What is tail recursion?,A loop optimization,A recursive call as the last operation,A variable type,A function wrapper,A recursive call as the last operation,,,,,,
recursion,What is memoization in recursion?,Defining loops,Caching results to optimize calls,Handling exceptions,Creating arrays,Caching results to optimize calls,,,,,,
recursion,What is a recursive algorithm’s stack overflow?,When recursion uses too much memory,When recursion runs infinitely,When recursion has no base case,When recursion has no parameters,When recursion uses too much memory,,,,,,
recursion,What is an iterative solution compared to recursion?,A solution using loops instead of recursion,A solution with no loops,A solution that throws exceptions,A solution that uses arrays,A solution using loops instead of recursion,,,,,,
recursion,What is the difference between direct and indirect recursion?,Direct recursion calls itself; indirect calls another function that calls back,Direct recursion uses loops; indirect does not,Direct recursion has no base case; indirect does,Direct recursion uses arrays; indirect does not,Direct recursion calls itself; indirect calls another function that calls back,,,,,,
recursion,What is a factorial function an example of?,A loop structure,A recursive function,A variable type,A class definition,A recursive function,,,,,,
recursion,What is the role of the call stack in recursion?,To store variables,To manage recursive function calls,To define loops,To handle exceptions,To manage recursive function calls,,,,,,
recursion,What is a recursive tree traversal?,A loop over tree nodes,Traversing a tree using recursion,Sorting a tree,Deleting a tree,Traversing a tree using recursion,,,,,,
immutable variable,What is an immutable variable?,A variable that can be changed,A variable that cannot be changed,A loop structure,A function wrapper,A variable that cannot be changed,,,,,,
immutable variable,What is the benefit of immutable variables?,Faster execution,Thread safety and predictability,Smaller memory usage,Simpler syntax,Thread safety and predictability,,,,,,
immutable variable,What is an example of an immutable variable in Python?,A list,A tuple,A dictionary,A set,A tuple,,,,,,
immutable variable,What does immutability prevent in programming?,Code reusability,Unexpected side effects,Function calls,Variable declarations,Unexpected side effects,,,,,,
immutable variable,What is a common use of immutable variables in functional programming?,To allow state changes,To ensure pure functions,To define loops,To handle exceptions,To ensure pure functions,,,,,,
immutable variable,How can you create an immutable variable in Java?,Using the final keyword,Using the static keyword,Using the public keyword,Using the private keyword,Using the final keyword,,,,,,
immutable variable,What is the difference between mutable and immutable variables?,Mutable cannot be changed; immutable can,Immutable cannot be changed; mutable can,Mutable is global; immutable is local,Immutable is global; mutable is local,Immutable cannot be changed; mutable can,,,,,,
immutable variable,What is an immutable string in programming?,A string that can be modified,A string that cannot be modified after creation,A string with no characters,A string that is global,A string that cannot be modified after creation,,,,,,
immutable variable,What is the role of immutability in concurrent programming?,To increase memory usage,To prevent race conditions,To define loops,To handle exceptions,To prevent race conditions,,,,,,
immutable variable,What is an immutable object in OOP?,An object whose state cannot be changed after creation,An object that can be modified,An object with no methods,An object that is global,An object whose state cannot be changed after creation,,,,,,
higher-order function,What is a higher-order function?,A function with no return value,A function that manipulates other functions,A loop structure,A variable type,A function that manipulates other functions,,,,,,
higher-order function,In which programming paradigm are higher-order functions common?,Object-oriented,Functional,Procedural,Logic,Functional,,,,,,
higher-order function,What is an example of a higher-order function in JavaScript?,A loop function,The map function,A variable declaration,A class method,The map function,,,,,,
higher-order function,What is the benefit of using higher-order functions?,Increased complexity,Code reusability and abstraction,More memory usage,Longer execution time,Code reusability and abstraction,,,,,,
higher-order function,What does a higher-order function typically accept as an argument?,A loop,A function,A variable,A class,A function,,,,,,
higher-order function,What is a callback function in relation to higher-order functions?,A function passed as an argument to another function,A function with no parameters,A function that loops,A function that returns void,A function passed as an argument to another function,,,,,,
higher-order function,What is the filter function in JavaScript an example of?,A loop structure,A higher-order function,A variable type,A class definition,A higher-order function,,,,,,
higher-order function,What does the reduce function in JavaScript do as a higher-order function?,Loops over an array,Applies a function to reduce an array to a single value,Sorts an array,Reverses an array,Applies a function to reduce an array to a single value,,,,,,
higher-order function,What is a closure in the context of higher-order functions?,A loop structure,A function that retains access to its outer scope,A variable type,A class definition,A function that retains access to its outer scope,,,,,,
higher-order function,What is the main difference between a regular function and a higher-order function?,Regular functions return values; higher-order do not,Regular functions cannot take functions as arguments; higher-order can,Regular functions use loops; higher-order do not,Regular functions are global; higher-order are local,Regular functions cannot take functions as arguments; higher-order can,,,,,,
map,What does the map operation do in programming?,Sorts a collection,Transforms each element in a collection,Filters a collection,Joins collections,Transforms each element in a collection,,,,,,
map,What is a common use of map in functional programming?,Looping,Creating key-value pairs,Applying a function to each element,Handling exceptions,Applying a function to each element,,,,,,
map,What does the map function return in JavaScript?,A new array with transformed elements,The original array,An object,A sorted array,A new array with transformed elements,,,,,,
map,What is the difference between map and forEach in JavaScript?,map returns a new array; forEach does not,map modifies the original array; forEach does not,map sorts the array; forEach does not,map filters the array; forEach does not,map returns a new array; forEach does not,,,,,,
map,What is a key characteristic of the map operation in functional programming?,It modifies the original collection,It creates a new collection without side effects,It sorts the collection,It removes elements from the collection,It creates a new collection without side effects,,,,,,
map,What does the map operation in Python’s map() function require as an argument?,A loop,A function to apply to each element,A variable,A class,A function to apply to each element,,,,,,
map,What is the result of mapping over an empty collection?,An empty collection,A sorted collection,A filtered collection,An error,An empty collection,,,,,,
map,What is a practical use of map in data transformation?,Looping over data,Converting data types in a collection,Sorting data,Deleting data,Converting data types in a collection,,,,,,
map,What does map preserve in functional programming?,The structure of the original collection,The values of the original collection,The order of elements,The memory location of the collection,The structure of the original collection,,,,,,
map,What is the map operation’s time complexity in most implementations?,O(1),O(n),O(n log n),O(n^2),O(n),,,,,,
flatmap,What does flatMap do in programming?,Transforms and flattens nested collections,Sorts a collection,Filters a collection,Joins collections,Transforms and flattens nested collections,,,,,,
flatmap,What is a key difference between map and flatMap?,Map flattens collections,FlatMap flattens nested collections,Map filters elements,FlatMap sorts elements,FlatMap flattens nested collections,,,,,,
flatmap,What does flatMap return in JavaScript?,A new flattened array,A sorted array,An object,The original array,A new flattened array,,,,,,
flatmap,What is a common use of flatMap in data processing?,Sorting nested data,Transforming and flattening nested data,Filtering data,Looping over data,Transforming and flattening nested data,,,,,,
flatmap,What happens when flatMap is applied to an empty collection?,It returns an empty collection,It throws an error,It sorts the collection,It creates a new collection,It returns an empty collection,,,,,,
flatmap,What does flatMap do with nested arrays in JavaScript?,Flattens them into a single array,Sorts them,Filters them,Reverses them,Flattens them into a single array,,,,,,
flatmap,What is the role of the function passed to flatMap?,To transform elements into arrays,To sort elements,To filter elements,To loop over elements,To transform elements into arrays,,,,,,
flatmap,What is the time complexity of flatMap in most cases?,O(1),O(n),O(n log n),O(n^2),O(n),,,,,,
flatmap,What is a practical example of flatMap in Java?,Splitting strings in a list and flattening the result,Sorting a list,Filtering a list,Looping over a list,Splitting strings in a list and flattening the result,,,,,,
flatmap,What does flatMap ensure in functional programming?,Side effects,Immutability of the original collection,Sorting of elements,Modification of the original collection,Immutability of the original collection,,,,,,
pattern matching,What is pattern matching in programming?,Comparing strings,Matching values against patterns,Defining loops,Creating arrays,Matching values against patterns,,,,,,
pattern matching,Which language heavily uses pattern matching?,Python,Scala,C++,Java,Scala,,,,,,
pattern matching,What is a common use of pattern matching in Scala?,Looping over data,Deconstructing data structures,Sorting data,Filtering data,Deconstructing data structures,,,,,,
pattern matching,What does pattern matching allow in functional programming?,Imperative programming,Declarative handling of data,Looping over data,Modifying data,Declarative handling of data,,,,,,
pattern matching,What is an example of pattern matching in Scala?,Using a for loop,Using a match expression,Using a while loop,Using an if statement,Using a match expression,,,,,,
pattern matching,What does the wildcard pattern (_) do in pattern matching?,Matches any value,Matches a specific value,Matches a loop,Matches an array,Matches any value,,,,,,
pattern matching,What is the benefit of pattern matching in code readability?,It increases complexity,It makes code more declarative and expressive,It reduces performance,It adds more loops,It makes code more declarative and expressive,,,,,,
pattern matching,What does pattern matching with case classes in Scala enable?,Sorting case classes,Matching and extracting fields of case classes,Looping over case classes,Deleting case classes,Matching and extracting fields of case classes,,,,,,
pattern matching,What is a guard clause in pattern matching?,A loop condition,An additional condition in a pattern match,A variable type,A function wrapper,An additional condition in a pattern match,,,,,,
pattern matching,What does pattern matching ensure in exhaustive checks?,All possible cases are handled,Some cases are handled,Loops are handled,Arrays are handled,All possible cases are handled,,,,,,
function literal,What is a function literal?,A named function,An anonymous function expression,A loop structure,A variable type,An anonymous function expression,,,,,,
function literal,What is another term for function literal?,Callback,Lambda expression,Constructor,Destructor,Lambda expression,,,,,,
function literal,What is a common use of a function literal in JavaScript?,Defining loops,Passing a function inline as an argument,Creating arrays,Handling exceptions,Passing a function inline as an argument,,,,,,
function literal,What does a function literal lack compared to a named function?,A name,A return value,A parameter,A body,A name,,,,,,
function literal,What is an example of a function literal in Python?,def func(),lambda x: x + 1,for loop,while loop,lambda x: x + 1,,,,,,
function literal,What is the benefit of using function literals in code?,Increased complexity,Conciseness and flexibility,More memory usage,Longer execution time,Conciseness and flexibility,,,,,,
function literal,What does a function literal enable in functional programming?,Imperative programming,Declarative programming with inline functions,Looping over data,Modifying data,Declarative programming with inline functions,,,,,,
function literal,What is the syntax of a function literal in JavaScript?,function name() {},() => {},for loop,while loop,() => {},,,,,,
function literal,What is a function literal often used with in JavaScript?,Loops,Higher-order functions,Classes,Variables,Higher-order functions,,,,,,
function literal,What does a function literal in Scala look like?,def func(),x => x + 1,for loop,while loop,x => x + 1,,,,,,
trait,What is a trait in Scala?,A loop structure,A reusable set of methods,A variable container,A class definition,A reusable set of methods,,,,,,
trait,How does a trait differ from an interface?,Traits cannot have methods,Traits can have concrete methods,Traits are immutable,Traits are loops,Traits can have concrete methods,,,,,,
trait,What is a common use of traits in Scala?,Defining loops,Providing reusable behavior to classes,Creating arrays,Handling exceptions,Providing reusable behavior to classes,,,,,,
trait,What keyword is used to mix a trait into a Scala class?,extends,implements,trait,loop,extends,,,,,,
trait,What is a stackable trait in Scala?,A trait that can be layered with others,A trait with no methods,A trait that loops,A trait that cannot be extended,A trait that can be layered with others,,,,,,
trait,What does a trait with abstract methods require?,A loop,Implementation in the class that mixes it in,A variable,A function wrapper,Implementation in the class that mixes it in,,,,,,
trait,What is the benefit of using traits in Scala?,Increased complexity,Code reuse and modularity,More memory usage,Longer execution time,Code reuse and modularity,,,,,,
trait,What can a trait in Scala contain?,Only abstract methods,Both abstract and concrete methods,Only loops,Only variables,Both abstract and concrete methods,,,,,,
trait,What is a trait often used for in Scala?,Defining loops,Defining behavior for multiple classes,Creating arrays,Handling exceptions,Defining behavior for multiple classes,,,,,,
trait,What is the difference between a trait and a class in Scala?,Traits cannot be instantiated; classes can,Traits can be instantiated; classes cannot,Traits are immutable; classes are not,Traits are loops; classes are not,Traits cannot be instantiated; classes can,,,,,,
option,What is the purpose of Option in programming?,To define loops,To handle optional values safely,To create arrays,To manage threads,To handle optional values safely,,,,,,
option,What are the two states of an Option?,Some and None,True and False,On and Off,Big and Small,Some and None,,,,,,
option,What does Option prevent in programming?,Null pointer exceptions,Loops,Arrays,Exceptions,Null pointer exceptions,,,,,,
option,What is the Some state in an Option?,An empty value,A value that exists,A loop,A variable,A value that exists,,,,,,
option,What is the None state in an Option?,A value that exists,An empty or absent value,A loop,A variable,An empty or absent value,,,,,,
option,What is a common method to handle an Option in Scala?,getOrElse,loop,filter,sort,getOrElse,,,,,,
option,What does Option encourage in programming?,Null checks,Safe handling of absent values,Loops,Arrays,Safe handling of absent values,,,,,,
option,What is the difference between Option and null in programming?,Option forces explicit handling; null does not,Option is implicit; null is explicit,Option is a loop; null is not,Option is an array; null is not,Option forces explicit handling; null does not,,,,,,
option,What is a practical use of Option in Scala?,Looping over data,Handling database query results that may be absent,Sorting data,Filtering data,Handling database query results that may be absent,,,,,,
option,What does Option map do in Scala?,Transforms the value inside Some,Sorts the Option,Filters the Option,Deletes the Option,Transforms the value inside Some,,,,,,
for comprehension,What is a for comprehension used for?,Defining arrays,Chaining monadic operations,Handling exceptions,Creating loops,Chaining monadic operations,,,,,,
for comprehension,Which language uses for comprehensions?,Python,Scala,C++,Java,Scala,,,,,,
for comprehension,What does a for comprehension in Scala resemble?,A loop,A function,A class,An array,A loop,,,,,,
for comprehension,What types can for comprehensions in Scala work with?,Only arrays,Monadic types like Option and List,Only loops,Only variables,Monadic types like Option and List,,,,,,
for comprehension,What is the yield keyword used for in a for comprehension?,To define a loop,To produce a result from the comprehension,To break the comprehension,To sort the result,To produce a result from the comprehension,,,,,,
for comprehension,What is a common use of for comprehensions in Scala?,Looping over data,Working with Option and List in a readable way,Sorting data,Filtering data,Working with Option and List in a readable way,,,,,,
for comprehension,What does a for comprehension with multiple generators do?,Loops over multiple collections,Sorts multiple collections,Filters multiple collections,Deletes multiple collections,Loops over multiple collections,,,,,,
for comprehension,What is the benefit of using for comprehensions in Scala?,Increased complexity,Readability for monadic operations,More memory usage,Longer execution time,Readability for monadic operations,,,,,,
for comprehension,What does a for comprehension with a guard do?,Adds a loop,Adds a condition to filter elements,Sorts elements,Deletes elements,Adds a condition to filter elements,,,,,,
for comprehension,What is the result of a for comprehension in Scala?,A new collection or value,The original collection,An error,A sorted collection,A new collection or value,,,,,,
lazy evaluation,What is lazy evaluation?,Evaluating all expressions,Evaluating expressions only when needed,Defining loops,Creating arrays,Evaluating expressions only when needed,,,,,,
lazy evaluation,What is a benefit of lazy evaluation?,Increased memory usage,Improved performance for unused values,Simpler syntax,Faster compilation,Improved performance for unused values,,,,,,
lazy evaluation,What is an example of lazy evaluation in Scala?,Using val,Using lazy val,Using def,Using var,Using lazy val,,,,,,
lazy evaluation,What does lazy evaluation prevent in programming?,Efficient memory usage,Unnecessary computations,Loops,Arrays,Unnecessary computations,,,,,,
lazy evaluation,What is a common use of lazy evaluation in functional programming?,To evaluate all expressions,To defer computations until needed,To define loops,To handle exceptions,To defer computations until needed,,,,,,
lazy evaluation,What is the difference between eager and lazy evaluation?,Eager evaluates immediately; lazy evaluates on demand,Eager evaluates on demand; lazy evaluates immediately,Eager uses loops; lazy does not,Eager uses arrays; lazy does not,Eager evaluates immediately; lazy evaluates on demand,,,,,,
lazy evaluation,What is a lazy stream in programming?,A stream that evaluates all elements,A stream that evaluates elements on demand,A loop,An array,A stream that evaluates elements on demand,,,,,,
lazy evaluation,What does lazy evaluation enable in infinite data structures?,Looping over them,Working with them without evaluating all elements,Sorting them,Deleting them,Working with them without evaluating all elements,,,,,,
lazy evaluation,What is the role of lazy evaluation in performance optimization?,To increase memory usage,To reduce unnecessary computations,To define loops,To handle exceptions,To reduce unnecessary computations,,,,,,
lazy evaluation,What is a practical example of lazy evaluation in Scala?,Looping over data,Defining an infinite sequence,Sorting data,Filtering data,Defining an infinite sequence,,,,,,
monoid,What is a monoid in programming?,A loop structure,A type with an associative operation and identity,A variable container,A class definition,A type with an associative operation and identity,,,,,,
monoid,What is an example of a monoid?,A binary tree,A list with concatenation,A stack structure,A graph structure,A list with concatenation,,,,,,
monoid,What is the identity element in a monoid?,An element that changes the result,An element that does not change the result when combined,An element that loops,An element that sorts,An element that does not change the result when combined,,,,,,
monoid,What is the associative operation in a monoid?,An operation that can be reordered without changing the result,An operation that changes the result,An operation that loops,An operation that filters,An operation that can be reordered without changing the result,,,,,,
monoid,What is a common use of monoids in functional programming?,Looping over data,Folding collections,Sorting data,Filtering data,Folding collections,,,,,,
monoid,What does the monoid laws ensure?,Loop correctness,Consistency in operations,Sorting correctness,Filtering correctness,Consistency in operations,,,,,,
monoid,What is an example of a monoid in Scala?,A loop,The Int type with addition and 0 as identity,An array,A variable,The Int type with addition and 0 as identity,,,,,,
monoid,What is the benefit of using monoids in programming?,Increased complexity,Guaranteed associativity and identity for operations,More memory usage,Longer execution time,Guaranteed associativity and identity for operations,,,,,,
monoid,What does a monoid enable in parallel computing?,Looping over data,Parallel folding of collections,Sorting data,Filtering data,Parallel folding of collections,,,,,,
monoid,What is the difference between a monoid and a semigroup?,A monoid has an identity element; a semigroup does not,A monoid has no identity element; a semigroup does,A monoid uses loops; a semigroup does not,A monoid uses arrays; a semigroup does not,A monoid has an identity element; a semigroup does not,,,,,,
functor,What is a functor in programming?,A loop helper,A type that supports mapping,A variable container,A function wrapper,A type that supports mapping,,,,,,
functor,Which operation is key to a functor?,Filter,Fold,Map,FlatMap,Map,,,,,,
functor,What is an example of a functor in Scala?,A loop,The Option type,An array,A variable,The Option type,,,,,,
functor,What does the map operation in a functor do?,Sorts the functor,Transforms the value inside the functor,Filters the functor,Deletes the functor,Transforms the value inside the functor,,,,,,
functor,What is a common use of functors in functional programming?,Looping over data,Transforming data in a context,Sorting data,Filtering data,Transforming data in a context,,,,,,
functor,What does a functor preserve in programming?,The structure of the type,The values of the type,The order of elements,The memory location of the type,The structure of the type,,,,,,
functor,What is the benefit of using functors in programming?,Increased complexity,Abstraction over types with mapping,More memory usage,Longer execution time,Abstraction over types with mapping,,,,,,
functor,What is the difference between a functor and a monad?,A functor supports map; a monad supports flatMap too,A functor supports flatMap; a monad supports map,A functor uses loops; a monad does not,A functor uses arrays; a monad does not,A functor supports map; a monad supports flatMap too,,,,,,
functor,What does a functor ensure in functional programming?,Side effects,Immutability of the original type,Sorting of elements,Modification of the original type,Immutability of the original type,,,,,,
functor,What is a practical example of a functor in JavaScript?,Looping over data,The Array type with map,Sorting data,Filtering data,The Array type with map,,,,,,
monad,What is a monad in programming?,A loop structure,A type with flatMap and unit operations,A variable container,A class definition,A type with flatMap and unit operations,,,,,,
monad,What is a common use of monads?,Handling side effects,Defining arrays,Creating loops,Sorting data,Handling side effects,,,,,,
monad,What does the flatMap operation do in a monad?,Sorts the monad,Chains computations within the monad,Filters the monad,Deletes the monad,Chains computations within the monad,,,,,,
monad,What is the unit operation in a monad?,A loop,Wraps a value into the monad,A variable,A function wrapper,Wraps a value into the monad,,,,,,
monad,What is an example of a monad in Scala?,A loop,The Option type,An array,A variable,The Option type,,,,,,
monad,What does a monad enable in functional programming?,Imperative programming,Chaining computations with context,Looping over data,Modifying data,Chaining computations with context,,,,,,
monad,What are the monad laws in programming?,Loop laws,Identity and associativity laws,Sorting laws,Filtering laws,Identity and associativity laws,,,,,,
monad,What is the benefit of using monads in programming?,Increased complexity,Abstraction over computations with context,More memory usage,Longer execution time,Abstraction over computations with context,,,,,,
monad,What does a monad ensure in functional programming?,Side effects,Immutability of the original type,Sorting of elements,Modification of the original type,Immutability of the original type,,,,,,
monad,What is a practical example of a monad in JavaScript?,Looping over data,The Promise type,Sorting data,Filtering data,The Promise type,,,,,,
partial function,What is a partial function in programming?,A function defined for all inputs,A function defined for some inputs,A loop structure,A variable type,A function defined for some inputs,,,,,,
partial function,Which language uses partial functions?,Python,Scala,C++,Java,Scala,,,,,,
partial function,What does a partial function in Scala allow?,Looping over data,Defining behavior for a subset of inputs,Sorting data,Filtering data,Defining behavior for a subset of inputs,,,,,,
partial function,What method checks if a partial function is defined for an input in Scala?,isDefinedAt,sort,filter,loop,isDefinedAt,,,,,,
partial function,What is a common use of partial functions in Scala?,Looping over data,Pattern matching,Sorting data,Filtering data,Pattern matching,,,,,,
partial function,What happens if a partial function is called on an undefined input?,It returns a default value,It throws an exception,It loops,It sorts the input,It throws an exception,,,,,,
partial function,What is the benefit of using partial functions in programming?,Increased complexity,Flexibility in handling specific inputs,More memory usage,Longer execution time,Flexibility in handling specific inputs,,,,,,
partial function,What does a partial function often combine with in Scala?,Loops,Pattern matching,Arrays,Variables,Pattern matching,,,,,,
partial function,What is the difference between a partial function and a total function?,A partial function is defined for all inputs; a total function is not,A partial function is defined for some inputs; a total function is defined for all,A partial function uses loops; a total function does not,A partial function uses arrays; a total function does not,A partial function is defined for some inputs; a total function is defined for all,,,,,,
partial function,What is a practical example of a partial function in Scala?,Looping over data,Dividing numbers but undefined for zero,Sorting data,Filtering data,Dividing numbers but undefined for zero,,,,,,
implicits,What are implicits in Scala?,Loop helpers,Automatic parameter passing or conversion,Variable containers,Function wrappers,Automatic parameter passing or conversion,,,,,,
implicits,What is a common use of implicits?,Defining arrays,Type class implementation,Handling exceptions,Creating loops,Type class implementation,,,,,,
implicits,What does an implicit parameter in Scala do?,Defines a loop,Automatically provides a value if not explicitly passed,Sorts data,Filters data,Automatically provides a value if not explicitly passed,,,,,,
implicits,What is an implicit conversion in Scala?,A loop,Converting one type to another automatically,Sorting data,Filtering data,Converting one type to another automatically,,,,,,
implicits,What is a common pitfall of using implicits in Scala?,Improved readability,Unexpected behavior due to implicit conversions,More memory usage,Longer execution time,Unexpected behavior due to implicit conversions,,,,,,
implicits,What does the implicit keyword in Scala indicate?,A loop,A value or conversion that can be applied automatically,An array,A variable,A value or conversion that can be applied automatically,,,,,,
implicits,What is the benefit of implicits in type class patterns?,Increased complexity,Flexibility in defining behavior for types,More memory usage,Longer execution time,Flexibility in defining behavior for types,,,,,,
implicits,What does an implicit class in Scala do?,Defines a loop,Adds methods to existing types,Sorts data,Filters data,Adds methods to existing types,,,,,,
implicits,What is a practical example of implicits in Scala?,Looping over data,Converting a string to a custom type,Sorting data,Filtering data,Converting a string to a custom type,,,,,,
implicits,What does the implicit scope in Scala determine?,The loops available,Where implicits are looked up,The arrays available,The variables available,Where implicits are looked up,,,,,,
algebraic data type,What is an algebraic data type?,A loop structure,A type defined as a sum or product,A variable container,A class definition,A type defined as a sum or product,,,,,,
algebraic data type,Which language emphasizes algebraic data types?,Python,Scala,C++,Java,Scala,,,,,,
algebraic data type,What is a sum type in algebraic data types?,A type that can be one of several variants,A type that combines multiple types,A type that loops,A type that sorts,A type that can be one of several variants,,,,,,
algebraic data type,What is a product type in algebraic data types?,A type that combines multiple types into one,A type that can be one of several variants,A type that loops,A type that sorts,A type that combines multiple types into one,,,,,,
algebraic data type,What is an example of an algebraic data type in Scala?,A loop,The Option type,An array,A variable,The Option type,,,,,,
algebraic data type,What does an algebraic data type enable in programming?,Looping over data,Type-safe data modeling,Sorting data,Filtering data,Type-safe data modeling,,,,,,
algebraic data type,What is a common use of algebraic data types in functional programming?,Looping over data,Modeling data with variants,Sorting data,Filtering data,Modeling data with variants,,,,,,
algebraic data type,What does pattern matching often pair with in algebraic data types?,Loops,Deconstructing the type,Arrays,Variables,Deconstructing the type,,,,,,
algebraic data type,What is the benefit of using algebraic data types in programming?,Increased complexity,Type safety and expressiveness,More memory usage,Longer execution time,Type safety and expressiveness,,,,,,
algebraic data type,What is a practical example of an algebraic data type in Scala?,Looping over data,Defining a sealed trait with case classes,Sorting data,Filtering data,Defining a sealed trait with case classes,,,,,,
fold,What does the fold operation do in programming?,Sorts a collection,Reduces a collection to a single value,Filters a collection,Joins collections,Reduces a collection to a single value,,,,,,
fold,What is a common fold operation?,Map,Filter,FoldLeft,FlatMap,FoldLeft,,,,,,
fold,What does the fold operation require as an argument?,A loop,An initial value and a combining function,A variable,A class,An initial value and a combining function,,,,,,
fold,What is the difference between foldLeft and foldRight?,foldLeft processes from left to right; foldRight from right to left,foldLeft processes from right to left; foldRight from left to right,foldLeft uses loops; foldRight does not,foldLeft uses arrays; foldRight does not,foldLeft processes from left to right; foldRight from right to left,,,,,,
fold,What is a common use of fold in functional programming?,Looping over data,Reducing a collection to a single value,Sorting data,Filtering data,Reducing a collection to a single value,,,,,,
fold,What is the time complexity of a fold operation in most cases?,O(1),O(n),O(n log n),O(n^2),O(n),,,,,,
fold,What does fold ensure in functional programming?,Side effects,Immutability of the original collection,Sorting of elements,Modification of the original collection,Immutability of the original collection,,,,,,
fold,What is a practical example of fold in Scala?,Looping over data,Summing a list of numbers,Sorting data,Filtering data,Summing a list of numbers,,,,,,
fold,What does fold enable in parallel computing?,Looping over data,Parallel reduction of collections,Sorting data,Filtering data,Parallel reduction of collections,,,,,,
fold,What is the role of the initial value in a fold operation?,To loop over the collection,To provide a starting point for reduction,To sort the collection,To filter the collection,To provide a starting point for reduction,,,,,,
companion object,What is a companion object in Scala?,A loop helper,An object paired with a class,A variable container,A function wrapper,An object paired with a class,,,,,,
companion object,What is a common use of companion objects?,Defining loops,Factory methods,Handling exceptions,Creating arrays,Factory methods,,,,,,
companion object,What can a companion object access in Scala?,Only public members of the class,Private members of its companion class,Only loops,Only variables,Private members of its companion class,,,,,,
companion object,What is the naming convention for a companion object in Scala?,It must have a different name than the class,It must have the same name as the class,"It must be named ""Object""","It must be named ""Companion""",It must have the same name as the class,,,,,,
companion object,What is a common pattern companion objects are used for in Scala?,Looping over data,Implementing the singleton pattern,Sorting data,Filtering data,Implementing the singleton pattern,,,,,,
companion object,What does a companion object often contain in Scala?,Loops,Static-like methods for the class,Arrays,Variables,Static-like methods for the class,,,,,,
companion object,What is the benefit of using companion objects in Scala?,Increased complexity,Encapsulation of class-related functionality,More memory usage,Longer execution time,Encapsulation of class-related functionality,,,,,,
companion object,What keyword is used to define a companion object in Scala?,class,object,trait,loop,object,,,,,,
companion object,What is a practical example of a companion object in Scala?,Looping over data,Creating a factory method for a class,Sorting data,Filtering data,Creating a factory method for a class,,,,,,
companion object,What does a companion object enable in terms of access in Scala?,Looping over the class,Access to private members of the class,Sorting the class,Filtering the class,Access to private members of the class,,,,,,
sealed trait,What is a sealed trait in Scala?,A trait for arrays,A trait restricted to a file,A variable container,A function wrapper,A trait restricted to a file,,,,,,
sealed trait,What is a benefit of sealed traits?,Increased memory usage,Exhaustive pattern matching,Simpler syntax,Faster execution,Exhaustive pattern matching,,,,,,
sealed trait,What does the sealed keyword do in a Scala trait?,Allows extensions anywhere,Restricts extensions to the same file,Defines a loop,Creates an array,Restricts extensions to the same file,,,,,,
sealed trait,What is a common use of sealed traits in Scala?,Looping over data,Defining algebraic data types,Sorting data,Filtering data,Defining algebraic data types,,,,,,
sealed trait,What does a sealed trait ensure in pattern matching?,Some cases are handled,All possible cases are handled by the compiler,Loops are handled,Arrays are handled,All possible cases are handled by the compiler,,,,,,
sealed trait,What is an example of a sealed trait in Scala?,A loop,An Option-like structure with Some and None,An array,A variable,An Option-like structure with Some and None,,,,,,
sealed trait,What is the difference between a sealed trait and a regular trait?,Sealed traits can be extended anywhere; regular traits cannot,Sealed traits restrict extensions; regular traits do not,Sealed traits use loops; regular traits do not,Sealed traits use arrays; regular traits do not,Sealed traits restrict extensions; regular traits do not,,,,,,
sealed trait,What does a sealed trait often pair with in Scala?,Loops,Case classes,Arrays,Variables,Case classes,,,,,,
sealed trait,What is the benefit of using sealed traits in type safety?,Increased complexity,Ensuring all cases are handled,More memory usage,Longer execution time,Ensuring all cases are handled,,,,,,
sealed trait,What is a practical example of a sealed trait in Scala?,Looping over data,Defining a hierarchy of expression types,Sorting data,Filtering data,Defining a hierarchy of expression types,,,,,,
currying,What is currying in programming?,Defining loops,Transforming a function to single-argument functions,Handling exceptions,Creating arrays,Transforming a function to single-argument functions,,,,,,
currying,Which language supports currying?,Python,Scala,C++,Java,Scala,,,,,,
currying,What does currying enable in functional programming?,Imperative programming,Partial application of functions,Looping over data,Modifying data,Partial application of functions,,,,,,
currying,What is an example of currying in Scala?,A loop,Defining a function that adds two numbers as add(x)(y),An array,A variable,Defining a function that adds two numbers as add(x)(y),,,,,,
currying,What is the benefit of currying in programming?,Increased complexity,Flexibility in function application,More memory usage,Longer execution time,Flexibility in function application,,,,,,
currying,What does a curried function return?,A loop,Another function,An array,A variable,Another function,,,,,,
currying,What is a common use of currying in functional programming?,Looping over data,Creating reusable function templates,Sorting data,Filtering data,Creating reusable function templates,,,,,,
currying,What is the difference between a curried and uncurried function?,Curried takes multiple arguments at once; uncurried takes one,Curried takes one argument at a time; uncurried takes multiple,Curried uses loops; uncurried does not,Curried uses arrays; uncurried does not,Curried takes one argument at a time; uncurried takes multiple,,,,,,
currying,What does currying often pair with in Scala?,Loops,Higher-order functions,Arrays,Variables,Higher-order functions,,,,,,
currying,What is a practical example of currying in Scala?,Looping over data,Defining a function to create custom multipliers,Sorting data,Filtering data,Defining a function to create custom multipliers,,,,,,
type class,What is a type class in programming?,A loop structure,A pattern for defining behavior,A variable container,A class definition,A pattern for defining behavior,,,,,,
type class,What is a key feature of type classes?,Inheritance,Implicit instances,Looping,Array creation,Implicit instances,,,,,,
type class,What is a common use of type classes in Scala?,Looping over data,Defining behavior for types like Show or Eq,Sorting data,Filtering data,Defining behavior for types like Show or Eq,,,,,,
type class,What does a type class in Scala typically define?,A loop,A set of methods to be implemented,An array,A variable,A set of methods to be implemented,,,,,,
type class,What is the role of implicits in type classes in Scala?,To define loops,To provide instances of the type class,To sort data,To filter data,To provide instances of the type class,,,,,,
type class,What is the benefit of using type classes in programming?,Increased complexity,Ad-hoc polymorphism,More memory usage,Longer execution time,Ad-hoc polymorphism,,,,,,
type class,What is an example of a type class in Scala?,A loop,The Eq type class for equality comparison,An array,A variable,The Eq type class for equality comparison,,,,,,
type class,What does a type class enable in functional programming?,Imperative programming,Generic behavior across types,Looping over data,Modifying data,Generic behavior across types,,,,,,
type class,What is the difference between a type class and a regular class?,Type classes define behavior; regular classes define data,Type classes define data; regular classes define behavior,Type classes use loops; regular classes do not,Type classes use arrays; regular classes do not,Type classes define behavior; regular classes define data,,,,,,
type class,What is a practical example of a type class in Scala?,Looping over data,Defining a Show type class to convert types to strings,Sorting data,Filtering data,Defining a Show type class to convert types to strings,,,,,,
applicative,What is an applicative in programming?,A loop helper,A type for applying functions in a context,A variable container,A function wrapper,A type for applying functions in a context,,,,,,
applicative,How does an applicative differ from a monad?,Applicatives are less powerful,Applicatives are more powerful,Applicatives are loops,Applicatives are arrays,Applicatives are less powerful,,,,,,
applicative,What does an applicative functor allow in functional programming?,Looping over data,Applying functions in a context,Sorting data,Filtering data,Applying functions in a context,,,,,,
applicative,What is an example of an applicative in Scala?,A loop,The Option type,An array,A variable,The Option type,,,,,,
applicative,What does the pure operation in an applicative do?,Sorts the applicative,Wraps a value into the applicative context,Filters the applicative,Deletes the applicative,Wraps a value into the applicative context,,,,,,
applicative,What is a common use of applicatives in functional programming?,Looping over data,Combining computations in a context,Sorting data,Filtering data,Combining computations in a context,,,,,,
applicative,What is the benefit of using applicatives in programming?,Increased complexity,Simpler handling of effects than monads,More memory usage,Longer execution time,Simpler handling of effects than monads,,,,,,
applicative,What does an applicative ensure in functional programming?,Side effects,Immutability of the original type,Sorting of elements,Modification of the original type,Immutability of the original type,,,,,,
applicative,What is the difference between an applicative and a functor?,Applicatives support applying functions in context; functors only map,Applicatives only map; functors apply functions,Applicatives use loops; functors do not,Applicatives use arrays; functors do not,Applicatives support applying functions in context; functors only map,,,,,,
applicative,What is a practical example of an applicative in Scala?,Looping over data,Combining two Options with a function,Sorting data,Filtering data,Combining two Options with a function,,,,,,
concept,Question,Option One,Option Two,Option Three,Option Four,Correct Answer,,,,,,
closure,What is a closure in programming?,A loop structure,A function that retains access to its outer scope,A variable type,A class definition,A function that retains access to its outer scope,,,,,,
closure,What does a closure typically capture?,Local variables,Global variables,Class methods,Loop structures,Local variables,,,,,,
closure,In which language are closures commonly used?,C++,JavaScript,Assembly,C,JavaScript,,,,,,
closure,What is a benefit of using closures?,Increased memory usage,Encapsulating stateful behavior,More complex syntax,Slower execution,Encapsulating stateful behavior,,,,,,
closure,What does a closure enable in functional programming?,Imperative programming,Maintaining state across calls,Looping over data,Modifying global variables,Maintaining state across calls,,,,,,
pointer,What is a pointer in programming?,A loop structure,A variable that stores a memory address,A function type,A class definition,A variable that stores a memory address,,,,,,
pointer,In which language are pointers heavily used?,Python,Java,C++,Ruby,C++,,,,,,
pointer,What does dereferencing a pointer mean?,Assigning a new memory address,Accessing the value at the memory address,Deleting the pointer,Creating a new pointer,Accessing the value at the memory address,,,,,,
pointer,What is a null pointer?,A pointer with no value,A pointer to zero,A pointer to an invalid address,A pointer to a function,A pointer with no value,,,,,,
pointer,What is a common risk of using pointers?,Memory safety,Memory leaks,Type safety,Code readability,Memory leaks,,,,,,
dictionary,What is a dictionary in programming?,A loop structure,A key-value data structure,A function type,A class definition,A key-value data structure,,,,,,
dictionary,In which language is a dictionary a built-in type?,Python,C++,JavaScript,Java,Python,,,,,,
dictionary,What is a common operation on a dictionary?,Looping,Key-value pair lookup,Sorting,Filtering,Key-value pair lookup,,,,,,
dictionary,What happens if you access a non-existent key in a dictionary?,It returns a default value or throws an error,It creates a new key,It sorts the dictionary,It deletes the dictionary,It returns a default value or throws an error,,,,,,
dictionary,What is a benefit of using a dictionary?,Slow access time,Fast key-based lookups,More memory usage,Complex syntax,Fast key-based lookups,,,,,,
virtual function,What is a virtual function in programming?,A loop helper,A function that can be overridden in a derived class,A variable type,A function wrapper,A function that can be overridden in a derived class,,,,,,
virtual function,In which language are virtual functions commonly used?,Python,JavaScript,C++,Ruby,C++,,,,,,
virtual function,What keyword is used to declare a virtual function in C++?,virtual,static,final,abstract,virtual,,,,,,
virtual function,What is the purpose of a virtual function?,To prevent overriding,To enable runtime polymorphism,To define a loop,To create an array,To enable runtime polymorphism,,,,,,
virtual function,What is a pure virtual function?,A virtual function with no implementation,A virtual function with a default implementation,A virtual function that loops,A virtual function that cannot be overridden,A virtual function with no implementation,,,,,,
module,What is a module in programming?,A loop structure,A file containing reusable code,A variable type,A class definition,A file containing reusable code,,,,,,
module,In which language are modules a core feature?,Python,C++,JavaScript,Java,Python,,,,,,
module,What keyword is used to import a module in Python?,include,import,require,load,import,,,,,,
module,What is a benefit of using modules?,Increased complexity,Code organization and reusability,More memory usage,Longer execution time,Code organization and reusability,,,,,,
module,What does a module typically contain?,Loops,Functions and classes,Arrays,Variables,Functions and classes,,,,,,
prototype,What is a prototype in programming?,A loop structure,An object used for inheritance,A variable type,A class definition,An object used for inheritance,,,,,,
prototype,In which language is the prototype pattern heavily used?,Python,C++,JavaScript,Java,JavaScript,,,,,,
prototype,What does the prototype chain enable in JavaScript?,Looping over objects,Inheritance between objects,Sorting objects,Filtering objects,Inheritance between objects,,,,,,
prototype,What is a benefit of using prototypes in JavaScript?,Increased memory usage,Dynamic inheritance,More complex syntax,Slower execution,Dynamic inheritance,,,,,,
prototype,What does Object.create() do in JavaScript?,Creates a loop,Creates an object with a specified prototype,Sorts an object,Filters an object,Creates an object with a specified prototype,,,,,,
lambda function,What is a lambda function in programming?,A named function,An anonymous function,A loop structure,A variable type,An anonymous function,,,,,,
lambda function,In which language are lambda functions commonly used?,Python,C++,JavaScript,Java,Python,,,,,,
lambda function,What is the syntax of a lambda function in Python?,def func(),lambda x: x + 1,for loop,while loop,lambda x: x + 1,,,,,,
lambda function,What is a common use of lambda functions?,Defining loops,Passing small functions inline,Creating arrays,Handling exceptions,Passing small functions inline,,,,,,
lambda function,What is a limitation of lambda functions in Python?,They can only have one expression,They can have multiple statements,They cannot take arguments,They cannot return values,They can only have one expression,,,,,,
set,What is a set in programming?,A loop structure,A collection of unique elements,A function type,A class definition,A collection of unique elements,,,,,,
set,In which language is a set a built-in type?,Python,C++,JavaScript,Java,Python,,,,,,
set,What is a common operation on a set?,Looping,Union of sets,Sorting,Filtering,Union of sets,,,,,,
set,What does a set ensure about its elements?,They are sorted,They are unique,They are indexed,They are mutable,They are unique,,,,,,
set,What is a benefit of using a set?,Slow access time,Fast membership testing,More memory usage,Complex syntax,Fast membership testing,,,,,,
callback,What is a callback in programming?,A loop structure,A function passed as an argument,A variable type,A class definition,A function passed as an argument,,,,,,
callback,In which language are callbacks commonly used?,Python,C++,JavaScript,Java,JavaScript,,,,,,
callback,What is a common use of callbacks in JavaScript?,Looping over data,Handling asynchronous operations,Sorting data,Filtering data,Handling asynchronous operations,,,,,,
callback,What is a potential issue with callbacks in JavaScript?,Increased complexity,Callback hell,More memory usage,Longer execution time,Callback hell,,,,,,
callback,What does a callback enable in event-driven programming?,Imperative programming,Responding to events,Looping over data,Modifying data,Responding to events,,,,,,
destructor,What is a destructor in programming?,A loop helper,A method called when an object is destroyed,A variable type,A function wrapper,A method called when an object is destroyed,,,,,,
destructor,In which language are destructors commonly used?,Python,JavaScript,C++,Ruby,C++,,,,,,
destructor,What symbol is used to define a destructor in C++?,~,*,#,$,~,,,,,,
destructor,What is the purpose of a destructor?,To create an object,To clean up resources,To define a loop,To create an array,To clean up resources,,,,,,
destructor,What is a key characteristic of a destructor in C++?,It takes arguments,It has no parameters,It returns a value,It can be overloaded,It has no parameters,,,,,,
concept,Question,Option One,Option Two,Option Three,Option Four,Correct Answer,,,,,,
event loop,What is the event loop in programming?,A data structure,A mechanism for handling asynchronous tasks,A variable type,A class definition,A mechanism for handling asynchronous tasks,,,,,,
event loop,In which language is the event loop a core concept?,Python,C++,JavaScript,Java,JavaScript,,,,,,
event loop,What does the event loop manage in JavaScript?,Memory allocation,Asynchronous callbacks,Variable declarations,Loop structures,Asynchronous callbacks,,,,,,
event loop,What is a key feature of the event loop?,Blocking execution,Non-blocking execution,Memory management,Type checking,Non-blocking execution,,,,,,
event loop,What does the event loop enable in Node.js?,Synchronous programming,Concurrent handling of I/O operations,Looping over data,Sorting data,Concurrent handling of I/O operations,,,,,,
overloading,What is overloading in programming?,Defining a loop,Using the same name for different functions or operators,Creating arrays,Handling exceptions,Using the same name for different functions or operators,,,,,,
overloading,In which language is function overloading supported?,Python,JavaScript,C++,Ruby,C++,,,,,,
overloading,What does method overloading depend on?,Return type,Number and type of parameters,Function name only,Loop structure,Number and type of parameters,,,,,,
overloading,What is a benefit of overloading?,Increased complexity,Improved code readability and reusability,More memory usage,Longer execution time,Improved code readability and reusability,,,,,,
overloading,What does operator overloading allow in C++?,Defining loops,Custom behavior for operators,Creating arrays,Handling exceptions,Custom behavior for operators,,,,,,
stack,What is a stack in programming?,A tree structure,A LIFO data structure,A FIFO data structure,A graph structure,A LIFO data structure,,,,,,
stack,In which language can you use a stack directly?,Python,C++,JavaScript,Java,Python,,,,,,
stack,What is a common operation on a stack?,Enqueue,Push and pop,Sort,Filter,Push and pop,,,,,,
stack,What does a stack overflow mean in programming?,Too many elements pushed onto the stack,Stack is empty,Stack is sorted,Stack is filtered,Too many elements pushed onto the stack,,,,,,
stack,What is a practical use of a stack?,Sorting data,Function call management,Graph traversal,Hashing data,Function call management,,,,,,
tuple,What is a tuple in programming?,A loop structure,An immutable sequence of elements,A variable type,A class definition,An immutable sequence of elements,,,,,,
tuple,In which language is a tuple a built-in type?,Python,C++,JavaScript,Java,Python,,,,,,
tuple,What is a key characteristic of a tuple in Python?,It is mutable,It is immutable,It is sorted,It is indexed by keys,It is immutable,,,,,,
tuple,What is a common use of tuples?,Storing mutable data,Returning multiple values from a function,Sorting data,Filtering data,Returning multiple values from a function,,,,,,
tuple,What does tuple unpacking allow in Python?,Looping over tuples,Assigning tuple elements to variables,Sorting tuples,Filtering tuples,Assigning tuple elements to variables,,,,,,
promise,What is a promise in programming?,A loop structure,An object representing an asynchronous result,A variable type,A class definition,An object representing an asynchronous result,,,,,,
promise,In which language are promises commonly used?,Python,C++,JavaScript,Java,JavaScript,,,,,,
promise,What method is used to handle a resolved promise in JavaScript?,catch,then,reject,loop,then,,,,,,
promise,What is a benefit of using promises over callbacks?,Increased complexity,Simpler handling of asynchronous code,More memory usage,Longer execution time,Simpler handling of asynchronous code,,,,,,
promise,What does Promise.all do in JavaScript?,Rejects all promises,Resolves when all promises resolve,Sorts promises,Filters promises,Resolves when all promises resolve,,,,,,
method overriding,What is method overriding in programming?,Defining a loop,Redefining a base class method in a derived class,Creating arrays,Handling exceptions,Redefining a base class method in a derived class,,,,,,
method overriding,In which language is method overriding supported?,Python,C++,JavaScript,All of the above,All of the above,,,,,,
method overriding,What is required for method overriding?,Same method name and signature,Different method name,Same return type only,Loop structure,Same method name and signature,,,,,,
method overriding,What does method overriding enable?,Code duplication,Runtime polymorphism,Static binding,Loop optimization,Runtime polymorphism,,,,,,
method overriding,What keyword is often used to indicate overriding in Java?,override,virtual,final,static,override,,,,,,
queue,What is a queue in programming?,A tree structure,A FIFO data structure,A LIFO data structure,A graph structure,A FIFO data structure,,,,,,
queue,In which language can you use a queue directly?,Python,C++,JavaScript,Java,Python,,,,,,
queue,What is a common operation on a queue?,Push and pop,Enqueue and dequeue,Sort,Filter,Enqueue and dequeue,,,,,,
queue,What is a priority queue?,A queue with sorted elements,A queue with random access,A queue with no order,A queue with loops,A queue with sorted elements,,,,,,
queue,What is a practical use of a queue?,Sorting data,Task scheduling,Function call management,Hashing data,Task scheduling,,,,,,
file i/o,What does file I/O refer to in programming?,Looping over files,Reading from and writing to files,Creating arrays,Handling exceptions,Reading from and writing to files,,,,,,
file i/o,In which language is file I/O commonly performed?,Python,C++,Java,All of the above,All of the above,,,,,,
file i/o,What is a common method to read a file in Python?,read(),write(),sort(),filter(),read(),,,,,,
file i/o,What does the 'w' mode do when opening a file?,Readsconnections,Reads the file,Appends to the file,Creates a new file if it doesn’t exist,Writes binary data,Creates a new file if it doesn’t exist,,,,,
file i/o,What is a benefit of using a context manager for file I/O in Python?,Increases file size,Automatically closes the file,Sorts the file content,Filters the file content,Automatically closes the file,,,,,,
arrow function,What is an arrow function in JavaScript?,A named function,A concise function syntax,A loop structure,A variable type,A concise function syntax,,,,,,
arrow function,What symbol is used to define an arrow function in JavaScript?,=>,->,::,++,=>,,,,,,
arrow function,What is a key difference between arrow functions and regular functions?,Arrow functions have their own 'this',Regular functions have their own 'this',Arrow functions are always named,Regular functions are anonymous,Arrow functions have their own 'this',,,,,,
arrow function,What is a common use of arrow functions?,Defining loops,Writing concise callbacks,Creating arrays,Handling exceptions,Writing concise callbacks,,,,,,
arrow function,What is a limitation of arrow functions in JavaScript?,They cannot take arguments,They cannot be used in loops,They do not have their own 'arguments' object,They cannot return values,They do not have their own 'arguments' object,,,,,,
static method,What is a static method in programming?,A loop helper,A method that belongs to a class, not an instance,A variable type,A function wrapper,A method that belongs to a class, not an instance,,,,
static method,In which language are static methods commonly used?,Python,C++,Java,All of the above,All of the above,,,,,,
static method,What keyword is used to define a static method in Java?,static,virtual,final,override,static,,,,,,
static method,What is a common use of static methods?,Accessing instance variables,Utility functions,Creating loops,Handling exceptions,Utility functions,,,,,,
static method,What is a limitation of static methods?,They can access instance variables,They cannot be overridden,They cannot be called,They require an instance,They cannot access instance variables,,,,,,
dynamic memory allocation,What is dynamic memory allocation in programming?,Allocating memory at compile time,Allocating memory at runtime,Defining loops,Creating arrays,Allocating memory at runtime,,,,,,
dynamic memory allocation,In which language is dynamic memory allocation common?,Python,JavaScript,C++,Java,C++,,,,,,
dynamic memory allocation,What operator is used for dynamic memory allocation in C++?,new,alloc,malloc,create,new,,,,,,
dynamic memory allocation,What is a risk of dynamic memory allocation?,Memory safety,Memory leaks,Type safety,Code readability,Memory leaks,,,,,,
dynamic memory allocation,What does the 'delete' operator do in C++?,Allocates memory,Frees dynamically allocated memory,Sorts memory,Filters memory,Frees dynamically allocated memory,,,,,,
regular expression,What is a regular expression in programming?,A loop structure,A pattern for matching text,A variable type,A class definition,A pattern for matching text,,,,,,
regular expression,In which language are regular expressions commonly used?,Python,C++,JavaScript,All of the above,All of the above,,,,,,
regular expression,What does the '*' symbol mean in a regular expression?,Match one character,Match zero or more characters,Match exactly one character,Match the end of a string,Match zero or more characters,,,,,,
regular expression,What is a common use of regular expressions?,Looping over data,Text validation and searching,Sorting data,Filtering data,Text validation and searching,,,,,,
regular expression,What does the 're' module provide in Python?,Looping functions,Regular expression operations,Sorting functions,Filtering functions,Regular expression operations,,,,,,
event-driven programming,What is event-driven programming?,A loop-based paradigm,A paradigm where code responds to events,A variable-based paradigm,A class-based paradigm,A paradigm where code responds to events,,,,,,
event-driven programming,In which language is event-driven programming common?,Python,C++,JavaScript,Java,JavaScript,,,,,,
event-driven programming,What is an example of an event in event-driven programming?,A loop iteration,A mouse click,Variable declaration,Class instantiation,A mouse click,,,,,,
event-driven programming,What is a benefit of event-driven programming?,Increased complexity,Responsive applications,More memory usage,Longer execution time,Responsive applications,,,,,,
event-driven programming,What does an event listener do?,Loops over events,Executes code when an event occurs,Sorts events,Filters events,Executes code when an event occurs,,,,,,
operator overloading,What is operator overloading in programming?,Defining loops,Customizing operator behavior,Creating arrays,Handling exceptions,Customizing operator behavior,,,,,,
operator overloading,In which language is operator overloading supported?,Python,C++,Java,All of the above,All of the above,,,,,,
operator overloading,What does operator overloading allow for user-defined types?,Standard operator behavior,Custom operator behavior,Loop creation,Array handling,Custom operator behavior,,,,,,
operator overloading,What is a common use of operator overloading in C++?,Looping over objects,Defining arithmetic for custom classes,Sorting objects,Filtering objects,Defining arithmetic for custom classes,,,,,,
operator overloading,What is a limitation of operator overloading?,It can make code less readable,It improves performance,It reduces memory usage,It simplifies syntax,It can make code less readable,,,,,,
final keyword,What does the 'final' keyword do in Java?,Allows method overriding,Prevents method overriding,Defines a loop,Creates an array,Prevents method overriding,,,,,,
final keyword,What can the 'final' keyword be applied to in Java?,Variables, methods, and classes,Loops only,Arrays only,Functions only,Variables, methods, and classes,,
final keyword,What is the effect of 'final' on a variable in Java?,It can be changed,It cannot be changed after initialization,It becomes global,It becomes static,It cannot be changed after initialization,,,,,,
final keyword,What is a benefit of using the 'final' keyword?,Increased mutability,Improved safety and clarity,More memory usage,Longer execution time,Improved safety and clarity,,,,,,
final keyword,What does a 'final' class mean in Java?,It can be extended,It cannot be extended,It must be abstract,It must be static,It cannot be extended,,,,,,
graph,What is a graph in programming?,A linear data structure,A collection of nodes and edges,A fixed-size array,A queue structure,A collection of nodes and edges,,,,,,
graph,What is a common representation of a graph?,Array,Adjacency list or matrix,Stack,Queue,Adjacency list or matrix,,,,,,
graph,What is a directed graph?,A graph with bidirectional edges,A graph with unidirectional edges,A graph with no edges,A graph with loops,A graph with unidirectional edges,,,,,,
graph,What is a common algorithm for graphs?,Binary search,Depth-first search,Linear search,Quick sort,Depth-first search,,,,,,
graph,What is a practical use of graphs?,Sorting data,Modeling networks,Function call management,Hashing data,Modeling networks,,,,,,
filter,What does the filter operation do in programming?,Sorts a collection,Selects elements based on a condition,Transforms elements,Joins collections,Selects elements based on a condition,,,,,,
filter,In which language is the filter operation commonly used?,Python,C++,JavaScript,All of the above,All of the above,,,,,,
filter,What does the filter() method return in JavaScript?,A new array with filtered elements,The original array,An object,A sorted array,A new array with filtered elements,,,,,,
filter,What is a common use of filter in functional programming?,Looping over data,Selecting elements that match a predicate,Sorting data,Transforming data,Selecting elements that match a predicate,,,,,,
filter,What does filter preserve in functional programming?,The structure of the original collection,The values of the original collection,The order of elements,The memory location of the collection,The order of elements,,,,,,
hoisting,What is hoisting in JavaScript?,Creating objects,Moving declarations to the top,Handling exceptions,Optimizing code execution,Moving declarations to the top,,,,,,
hoisting,What types of declarations are hoisted in JavaScript?,let declarations,const declarations,var declarations and function declarations,All variable declarations,var declarations and function declarations,,,,,,
hoisting,What is a common issue with hoisting?,Improved readability,Unexpected behavior due to declaration movement,More memory usage,Longer execution time,Unexpected behavior due to declaration movement,,,,,,
hoisting,What does hoisting apply to in a JavaScript function?,The entire script,The current scope,The global scope only,The loop scope only,The current scope,,,,,,
hoisting,What is a best practice to avoid hoisting issues?,Use var everywhere,Use let and const,Declare variables at the bottom,Use global variables,Use let and const,,,,,,
exception,What is an exception in programming?,A loop condition,An error that disrupts normal execution,A variable type,A class definition,An error that disrupts normal execution,,,,,,
exception,In which language are exceptions commonly used?,Python,C++,Java,All of the above,All of the above,,,,,,
exception,What keyword is used to throw an exception in Java?,throw,catch,try,finally,throw,,,,,,
exception,What is a common way to handle exceptions?,Ignore them,Use try-catch blocks,Use loops,Use arrays,Use try-catch blocks,,,,,,
exception,What does an uncaught exception cause in a program?,Program continuation,Program termination,Loop execution,Array creation,Program termination,,,,,,
constructor,What is a constructor in programming?,A loop helper,A method to initialize objects,A variable type,A function wrapper,A method to initialize objects,,,,,,
constructor,In which language are constructors commonly used?,Python,C++,Java,All of the above,All of the above,,,,,,
constructor,What is the name of a constructor in C++?,Any name,The same as the class name,constructor,init,The same as the class name,,,,,,
constructor,What is a common use of constructors?,Looping over objects,Setting initial values for object attributes,Sorting objects,Filtering objects,Setting initial values for object attributes,,,,,,
constructor,What happens if you don’t define a constructor in Java?,A default constructor is provided,No constructor is created,The class cannot be instantiated,An error occurs,A default constructor is provided,,,,,,
concept,Question,Option One,Option Two,Option Three,Option Four,Correct Answer,,,,,,
structure,What is a structure in programming?,A loop construct,A user-defined data type combining different types,A function type,A class definition,A user-defined data type combining different types,,,,,,
structure,In which language are structures commonly used?,Python,JavaScript,C++,Java,C++,,,,,,
structure,What is a key feature of a structure in C++?,It can contain methods,It can only hold one data type,It groups variables of different types,It is immutable,It groups variables of different types,,,,,,
structure,What is a common use of structures?,Looping over data,Storing related data like a record,Sorting data,Handling exceptions,Storing related data like a record,,,,,,
structure,What is the difference between a structure and a class in C++?,Structures cannot have methods; classes can,Structures have public members by default; classes have private,Structures are immutable; classes are mutable,Structures are only for primitive types; classes are not,Structures have public members by default; classes have private,,,,,,
abstract base class,What is an abstract base class in programming?,A class that can be instantiated,A class that cannot be instantiated and defines methods to be implemented,A loop construct,A variable type,A class that cannot be instantiated and defines methods to be implemented,,,,,,
abstract base class,In which language are abstract base classes commonly used?,JavaScript,Python,C++,Java,Python,,,,,,
abstract base class,What module provides support for abstract base classes in Python?,collections,abc,math,os,abc,,,,,,
abstract base class,What is a common use of an abstract base class?,Looping over data,Enforcing a contract for subclasses,Sorting data,Handling exceptions,Enforcing a contract for subclasses,,,,,,
abstract base class,What decorator is often used to define an abstract method in Python?,@staticmethod,@abstractmethod,@classmethod,@property,@abstractmethod,,,,,,
serialization,What is serialization in programming?,Looping over data,Converting objects to a storable or transmittable format,Sorting data,Filtering data,Converting objects to a storable or transmittable format,,,,,,
serialization,In which language is serialization commonly used?,Python,C++,Java,All of the above,All of the above,,,,,,
serialization,What is a common format for serialization?,XML,Binary,JSON,All of the above,All of the above,,,,,,
serialization,What is the opposite process of serialization?,Deserialization,Sorting,Filtering,Looping,Deserialization,,,,,,
serialization,What is a benefit of serialization?,Increased complexity,Enabling data persistence and communication,More memory usage,Longer execution time,Enabling data persistence and communication,,,,,,
type hinting,What is type hinting in programming?,Defining loops,Annotating code with expected data types,Creating arrays,Handling exceptions,Annotating code with expected data types,,,,,,
type hinting,In which language is type hinting a feature?,Python,C++,JavaScript,Java,Python,,,,,,
type hinting,What module provides advanced type hinting support in Python?,math,typing,os,sys,typing,,,,,,
type hinting,What is a benefit of type hinting?,Reduced code readability,Improved code clarity and tool support,More memory usage,Longer execution time,Improved code clarity and tool support,,,,,,
type hinting,What is an example of a type hint in Python?,x: int = 5,x = 5,x.int = 5,x: loop = 5,x: int = 5,,,,,,
debouncing,What is debouncing in programming?,Looping over events,Delaying function execution to limit frequent calls,Sorting events,Filtering events,Delaying function execution to limit frequent calls,,,,,,
debouncing,In which language is debouncing commonly used?,Python,C++,JavaScript,Java,JavaScript,,,,,,
debouncing,What is a common use of debouncing?,Handling loops,Optimizing event handlers like scroll or resize,Sorting data,Handling exceptions,Optimizing event handlers like scroll or resize,,,,,,
debouncing,What does debouncing ensure in event-driven programming?,Immediate execution,Rate-limited execution,Loop execution,Array creation,Rate-limited execution,,,,,,
debouncing,What is a practical example of debouncing in JavaScript?,Looping over arrays,Delaying an API call on user typing,Sorting arrays,Filtering arrays,Delaying an API call on user typing,,,,,,
property decorator,What is a property decorator in Python?,A loop decorator,A decorator for defining getter/setter methods,A variable type,A class definition,A decorator for defining getter/setter methods,,,,,,
property decorator,What does the @property decorator do in Python?,Defines a loop,Allows a method to be accessed like an attribute,Sorts data,Filters data,Allows a method to be accessed like an attribute,,,,,,
property decorator,What is a common use of property decorators?,Looping over data,Encapsulating attribute access,Sorting data,Handling exceptions,Encapsulating attribute access,,,,,,
property decorator,What decorator is used with @property to define a setter in Python?,@setter,@property.setter,@method.setter,@attribute.setter,@property.setter,,,,,,
property decorator,What is a benefit of using property decorators?,Increased complexity,Improved encapsulation and readability,More memory usage,Longer execution time,Improved encapsulation and readability,,,,,,
abstract factory pattern,What is the abstract factory pattern?,A loop pattern,A creational pattern for creating families of objects,A variable pattern,A class pattern,A creational pattern for creating families of objects,,,,,,
abstract factory pattern,What is a key feature of the abstract factory pattern?,It creates a single object,It provides an interface for creating related objects,It sorts objects,It filters objects,It provides an interface for creating related objects,,,,,,
abstract factory pattern,In which language is the abstract factory pattern commonly used?,Python,C++,Java,All of the above,All of the above,,,,,,
abstract factory pattern,What is a benefit of the abstract factory pattern?,Increased complexity,Encapsulation of object creation,More memory usage,Longer execution time,Encapsulation of object creation,,,,,,
abstract factory pattern,What is a practical example of the abstract factory pattern?,Looping over objects,Creating UI components for different platforms,Sorting objects,Filtering objects,Creating UI components for different platforms,,,,,,
singleton pattern,What is the singleton pattern?,A loop pattern,A creational pattern ensuring one instance of a class,A variable pattern,A class pattern,A creational pattern ensuring one instance of a class,,,,,,
singleton pattern,In which language is the singleton pattern commonly used?,Python,C++,Java,All of the above,All of the above,,,,,,
singleton pattern,What is a common way to implement a singleton in Python?,Using a loop,Using a class with a static instance,Using an array,Using a function,Using a class with a static instance,,,,,,
singleton pattern,What is a benefit of the singleton pattern?,Multiple instances,Controlled access to a single instance,More memory usage,Longer execution time,Controlled access to a single instance,,,,,,
singleton pattern,What is a potential issue with the singleton pattern?,Improved scalability,Global state issues,Simpler syntax,Faster execution,Global state issues,,,,,,
dependency injection,What is dependency injection in programming?,Looping over dependencies,Providing dependencies to a class externally,Sorting dependencies,Filtering dependencies,Providing dependencies to a class externally,,,,,,
dependency injection,In which language is dependency injection commonly used?,Python,C++,Java,All of the above,All of the above,,,,,,
dependency injection,What is a benefit of dependency injection?,Increased coupling,Improved testability and flexibility,More memory usage,Longer execution time,Improved testability and flexibility,,,,,,
dependency injection,What is a common tool for dependency injection in Java?,Loop,Spring,Array,Function,Spring,,,,,,
dependency injection,What is a practical example of dependency injection?,Looping over objects,Injecting a database service into a class,Sorting objects,Filtering objects,Injecting a database service into a class,,,,,,
code refactoring,What is code refactoring in programming?,Writing new code,Improving code structure without changing behavior,Deleting code,Executing code,Improving code structure without changing behavior,,,,,,
code refactoring,What is a benefit of code refactoring?,Increased complexity,Improved maintainability and readability,More memory usage,Longer execution time,Improved maintainability and readability,,,,,,
code refactoring,What is a common technique in code refactoring?,Adding features,Extracting methods,Sorting code,Filtering code,Extracting methods,,,,,,
code refactoring,In which language can code refactoring be applied?,Python,C++,Java,All of the above,All of the above,,,,,,
code refactoring,What is a practical example of code refactoring?,Looping over code,Splitting a large function into smaller ones,Compiling code,Running code,Splitting a large function into smaller ones,,,,,,
